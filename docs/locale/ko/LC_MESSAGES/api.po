# api.po - tweepy.API (Twitter API v1.1 Reference)
# Copyright (C) 2009-2022, Joshua Roesslein
# This file is distributed under the same license as the tweepy package.
# 악동분홍토끼 <pinkrabbit412@daum.net>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tweepy 4.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-27 16:12+0900\n"
"PO-Revision-Date: 2022-01-08 04:53+0900\n"
"Last-Translator: 악동분홍토끼 <pinkrabbit412@daum.net>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api.rst:9
msgid ":class:`tweepy.API` --- Twitter API v1.1 Reference"
msgstr ":class:`tweepy.API` --- 트위터 API v1.1 레퍼런스"

#: of tweepy.api.API:1
msgid "Twitter API v1.1 Interface"
msgstr "트위터 API v1.1 레퍼런스"

#: of tweepy.api.API tweepy.api.API.add_list_member
#: tweepy.api.API.add_list_members tweepy.api.API.chunked_upload
#: tweepy.api.API.chunked_upload_append tweepy.api.API.chunked_upload_finalize
#: tweepy.api.API.chunked_upload_init tweepy.api.API.closest_trends
#: tweepy.api.API.create_block tweepy.api.API.create_favorite
#: tweepy.api.API.create_friendship tweepy.api.API.create_list
#: tweepy.api.API.create_media_metadata tweepy.api.API.create_mute
#: tweepy.api.API.create_saved_search tweepy.api.API.delete_direct_message
#: tweepy.api.API.destroy_block tweepy.api.API.destroy_favorite
#: tweepy.api.API.destroy_friendship tweepy.api.API.destroy_list
#: tweepy.api.API.destroy_mute tweepy.api.API.destroy_saved_search
#: tweepy.api.API.destroy_status tweepy.api.API.geo_id
#: tweepy.api.API.get_blocked_ids tweepy.api.API.get_blocks
#: tweepy.api.API.get_direct_message tweepy.api.API.get_direct_messages
#: tweepy.api.API.get_favorites tweepy.api.API.get_follower_ids
#: tweepy.api.API.get_followers tweepy.api.API.get_friend_ids
#: tweepy.api.API.get_friends tweepy.api.API.get_friendship
#: tweepy.api.API.get_list tweepy.api.API.get_list_member
#: tweepy.api.API.get_list_members tweepy.api.API.get_list_memberships
#: tweepy.api.API.get_list_ownerships tweepy.api.API.get_list_subscriber
#: tweepy.api.API.get_list_subscribers tweepy.api.API.get_list_subscriptions
#: tweepy.api.API.get_lists tweepy.api.API.get_media_upload_status
#: tweepy.api.API.get_muted_ids tweepy.api.API.get_mutes
#: tweepy.api.API.get_oembed tweepy.api.API.get_place_trends
#: tweepy.api.API.get_profile_banner tweepy.api.API.get_retweeter_ids
#: tweepy.api.API.get_retweets tweepy.api.API.get_retweets_of_me
#: tweepy.api.API.get_saved_search tweepy.api.API.get_status
#: tweepy.api.API.get_user tweepy.api.API.home_timeline
#: tweepy.api.API.incoming_friendships tweepy.api.API.list_timeline
#: tweepy.api.API.lookup_friendships tweepy.api.API.lookup_statuses
#: tweepy.api.API.lookup_users tweepy.api.API.media_upload
#: tweepy.api.API.mentions_timeline tweepy.api.API.no_retweets_friendships
#: tweepy.api.API.outgoing_friendships tweepy.api.API.rate_limit_status
#: tweepy.api.API.remove_list_member tweepy.api.API.remove_list_members
#: tweepy.api.API.report_spam tweepy.api.API.retweet
#: tweepy.api.API.reverse_geocode tweepy.api.API.search_30_day
#: tweepy.api.API.search_full_archive tweepy.api.API.search_geo
#: tweepy.api.API.search_tweets tweepy.api.API.search_users
#: tweepy.api.API.send_direct_message tweepy.api.API.set_settings
#: tweepy.api.API.simple_upload tweepy.api.API.subscribe_list
#: tweepy.api.API.unretweet tweepy.api.API.unsubscribe_list
#: tweepy.api.API.update_friendship tweepy.api.API.update_list
#: tweepy.api.API.update_profile tweepy.api.API.update_profile_banner
#: tweepy.api.API.update_profile_image tweepy.api.API.update_status
#: tweepy.api.API.update_status_with_media tweepy.api.API.user_timeline
#: tweepy.api.API.verify_credentials
msgid "Parameters"
msgstr "매개변수"

#: of tweepy.api.API:3
msgid "The authentication handler to be used"
msgstr "사용할 인증 처리기"

#: of tweepy.api.API:4
msgid "The cache to query if a GET method is used"
msgstr "GET 메서드가 사용되는 경우 쿼리할 캐시"

#: of tweepy.api.API:5
msgid "The general REST API host server URL"
msgstr "일반 REST API 호스트 서버의 URL"

#: of tweepy.api.API:6
msgid ""
"The Parser instance to use for parsing the response from Twitter; "
"defaults to an instance of ModelParser"
msgstr ""
"트위터에서의 응답을 파싱(구문 분석)하는 데 사용할 파서 인스턴스; "
"기본적으로 ModelParser 인스턴스가 사용됩니다."

#: of tweepy.api.API:8
msgid "The full url to an HTTPS proxy to use for connecting to Twitter"
msgstr "트위터 연결에 사용할 HTTPS 프록시의 전체 URL"

#: of tweepy.api.API:9
msgid "Number of retries to attempt when an error occurs"
msgstr "오류 발생 시 재시도할 횟수"

#: of tweepy.api.API:10
msgid "Number of seconds to wait between retries"
msgstr "재시도 간격 (초 단위)"

#: of tweepy.api.API:11
msgid "Which HTTP status codes to retry"
msgstr "재시도할 HTTP 상태 코드"

#: of tweepy.api.API:12
msgid "The maximum amount of time to wait for a response from Twitter"
msgstr "트위터로부터의 응답을 기다릴 최대 시간"

#: of tweepy.api.API:13
msgid "The URL of the upload server"
msgstr "업로드 서버의 URL"

#: of tweepy.api.API:14
msgid "Whether or not to automatically wait for rate limits to replenish"
msgstr "트위터 API 호출 제한 횟수 보충을 기다릴지의 여부"

#: of tweepy.api.API tweepy.api.API.get_list_member
#: tweepy.api.API.get_list_subscriber tweepy.api.API.verify_credentials
msgid "Raises"
msgstr "관련 오류"

#: of tweepy.api.API:16
msgid "If the given parser is not a Parser instance"
msgstr "주어진 파서가 파서 인스턴스가 아닌 경우"

#: of tweepy.api.API:19 tweepy.api.API.add_list_member:15
#: tweepy.api.API.add_list_members:18 tweepy.api.API.available_trends:11
#: tweepy.api.API.chunked_upload:19 tweepy.api.API.chunked_upload_append:11
#: tweepy.api.API.chunked_upload_finalize:12
#: tweepy.api.API.chunked_upload_init:12 tweepy.api.API.closest_trends:23
#: tweepy.api.API.create_block:15 tweepy.api.API.create_favorite:11
#: tweepy.api.API.create_friendship:12 tweepy.api.API.create_list:12
#: tweepy.api.API.create_media_metadata:10 tweepy.api.API.create_mute:11
#: tweepy.api.API.create_saved_search:9 tweepy.api.API.delete_direct_message:10
#: tweepy.api.API.destroy_block:13 tweepy.api.API.destroy_favorite:11
#: tweepy.api.API.destroy_friendship:10 tweepy.api.API.destroy_list:13
#: tweepy.api.API.destroy_mute:11 tweepy.api.API.destroy_saved_search:10
#: tweepy.api.API.destroy_status:11 tweepy.api.API.geo_id:9
#: tweepy.api.API.get_blocked_ids:11 tweepy.api.API.get_blocks:12
#: tweepy.api.API.get_direct_message:9 tweepy.api.API.get_direct_messages:11
#: tweepy.api.API.get_favorites:15 tweepy.api.API.get_follower_ids:14
#: tweepy.api.API.get_followers:16 tweepy.api.API.get_friend_ids:14
#: tweepy.api.API.get_friends:15 tweepy.api.API.get_friendship:12
#: tweepy.api.API.get_list:13 tweepy.api.API.get_list_member:18
#: tweepy.api.API.get_list_members:16 tweepy.api.API.get_list_memberships:17
#: tweepy.api.API.get_list_ownerships:15 tweepy.api.API.get_list_subscriber:18
#: tweepy.api.API.get_list_subscribers:17
#: tweepy.api.API.get_list_subscriptions:13 tweepy.api.API.get_lists:23
#: tweepy.api.API.get_media_upload_status:10 tweepy.api.API.get_muted_ids:10
#: tweepy.api.API.get_mutes:11 tweepy.api.API.get_oembed:56
#: tweepy.api.API.get_place_trends:25 tweepy.api.API.get_profile_banner:15
#: tweepy.api.API.get_retweeter_ids:13 tweepy.api.API.get_retweets:11
#: tweepy.api.API.get_retweets_of_me:15 tweepy.api.API.get_saved_search:10
#: tweepy.api.API.get_saved_searches:7 tweepy.api.API.get_settings:8
#: tweepy.api.API.get_status:17 tweepy.api.API.get_user:11
#: tweepy.api.API.home_timeline:16 tweepy.api.API.incoming_friendships:11
#: tweepy.api.API.list_timeline:22 tweepy.api.API.lookup_friendships:11
#: tweepy.api.API.lookup_statuses:16 tweepy.api.API.lookup_users:21
#: tweepy.api.API.media_upload:18 tweepy.api.API.mentions_timeline:13
#: tweepy.api.API.no_retweets_friendships:10
#: tweepy.api.API.outgoing_friendships:11 tweepy.api.API.rate_limit_status:12
#: tweepy.api.API.remove_list_member:15 tweepy.api.API.remove_list_members:18
#: tweepy.api.API.remove_profile_banner:4 tweepy.api.API.report_spam:12
#: tweepy.api.API.retweet:10 tweepy.api.API.reverse_geocode:21
#: tweepy.api.API.search_30_day:59 tweepy.api.API.search_full_archive:60
#: tweepy.api.API.search_geo:51 tweepy.api.API.search_tweets:55
#: tweepy.api.API.search_users:15 tweepy.api.API.send_direct_message:16
#: tweepy.api.API.set_settings:26 tweepy.api.API.simple_upload:13
#: tweepy.api.API.subscribe_list:12 tweepy.api.API.supported_languages:12
#: tweepy.api.API.unretweet:11 tweepy.api.API.unsubscribe_list:12
#: tweepy.api.API.update_friendship:12 tweepy.api.API.update_list:16
#: tweepy.api.API.update_profile:21 tweepy.api.API.update_profile_banner:19
#: tweepy.api.API.update_profile_image:13 tweepy.api.API.update_status:64
#: tweepy.api.API.update_status_with_media:24 tweepy.api.API.user_timeline:22
#: tweepy.api.API.verify_credentials:14
msgid "References"
msgstr "참조"

#: of tweepy.api.API:20
msgid "https://developer.twitter.com/en/docs/api-reference-index"
msgstr "https://developer.twitter.com/en/docs/api-reference-index"

#: ../../api.rst:17
msgid "Twitter API v1.1 Endpoint"
msgstr "트위터 API v1.1 엔드포인트"

#: ../../api.rst:17
msgid ":class:`API` Method"
msgstr ":class:`API` 메서드"

#: ../../api.rst:21
msgid "`GET search/30day/:label`_"
msgstr "`가져오기: search/30day/:label`_"

#: ../../api.rst:21
msgid ":meth:`API.search_30_day`"
msgstr ":meth:`API.search_30_day`"

#: ../../api.rst:23
msgid "`GET search/fullarchive/:label`_"
msgstr "`가져오기: search/fullarchive/:label`_"

#: ../../api.rst:23
msgid ":meth:`API.search_full_archive`"
msgstr ":meth:`API.search_full_archive`"

#: ../../api.rst:29
msgid "`GET statuses/home_timeline`_"
msgstr "`가져오기: statuses/home_timeline`_"

#: ../../api.rst:29
msgid ":meth:`API.home_timeline`"
msgstr ":meth:`API.home_timeline`"

#: ../../api.rst:31
msgid "`GET statuses/mentions_timeline`_"
msgstr "`가져오기: statuses/mentions_timeline`_"

#: ../../api.rst:31
msgid ":meth:`API.mentions_timeline`"
msgstr ":meth:`API.mentions_timeline`"

#: ../../api.rst:33
msgid "`GET statuses/user_timeline`_"
msgstr "`가져오기: statuses/user_timeline`_"

#: ../../api.rst:33
msgid ":meth:`API.user_timeline`"
msgstr ":meth:`API.user_timeline`"

#: ../../api.rst:37
msgid "`GET favorites/list`_"
msgstr "`가져오기:  favorites/list`_"

#: ../../api.rst:37
msgid ":meth:`API.get_favorites`"
msgstr ":meth:`API.get_favorites`"

#: ../../api.rst:39
msgid "`GET statuses/lookup`_"
msgstr "`가져오기: statuses/lookup`_"

#: ../../api.rst:39
msgid ":meth:`API.lookup_statuses`"
msgstr ":meth:`API.lookup_statuses`"

#: ../../api.rst:41
msgid "`GET statuses/oembed`_"
msgstr "`가져오기: statuses/oembed`_"

#: ../../api.rst:41
msgid ":meth:`API.get_oembed`"
msgstr ":meth:`API.get_oembed`"

#: ../../api.rst:43
msgid "`GET statuses/retweeters/ids`_"
msgstr "`가져오기: statuses/retweeters/ids`_"

#: ../../api.rst:43
msgid ":meth:`API.get_retweeter_ids`"
msgstr ":meth:`API.get_retweeter_ids`"

#: ../../api.rst:45
msgid "`GET statuses/retweets/:id`_"
msgstr "`가져오기: statuses/retweets/:id`_"

#: ../../api.rst:45
msgid ":meth:`API.get_retweets`"
msgstr ":meth:`API.get_retweets`"

#: ../../api.rst:47
msgid "`GET statuses/retweets_of_me`_"
msgstr "`가져오기: statuses/retweets_of_me`_"

#: ../../api.rst:47
msgid ":meth:`API.get_retweets_of_me`"
msgstr ":meth:`API.get_retweets_of_me`"

#: ../../api.rst:49
msgid "`GET statuses/show/:id`_"
msgstr "`가져오기: statuses/show/:id`_"

#: ../../api.rst:49
msgid ":meth:`API.get_status`"
msgstr ":meth:`API.get_status`"

#: ../../api.rst:51
msgid "`POST favorites/create`_"
msgstr "`게시: favorites/create`_"

#: ../../api.rst:51
msgid ":meth:`API.create_favorite`"
msgstr ":meth:`API.create_favorite`"

#: ../../api.rst:53
msgid "`POST favorites/destroy`_"
msgstr "`게시: favorites/destroy`_"

#: ../../api.rst:53
msgid ":meth:`API.destroy_favorite`"
msgstr ":meth:`API.destroy_favorite`"

#: ../../api.rst:55
msgid "`POST statuses/destroy/:id`_"
msgstr "`게시: statuses/destroy/:id`_"

#: ../../api.rst:55
msgid ":meth:`API.destroy_status`"
msgstr ":meth:`API.destroy_status`"

#: ../../api.rst:57
msgid "`POST statuses/retweet/:id`_"
msgstr "`게시: statuses/retweet/:id`_"

#: ../../api.rst:57
msgid ":meth:`API.retweet`"
msgstr ":meth:`API.retweet`"

#: ../../api.rst:59
msgid "`POST statuses/unretweet/:id`_"
msgstr "`게시: statuses/unretweet/:id`_"

#: ../../api.rst:59
msgid ":meth:`API.unretweet`"
msgstr ":meth:`API.unretweet`"

#: ../../api.rst:61
msgid "`POST statuses/update`_"
msgstr "`게시: statuses/update`_"

#: ../../api.rst:61
msgid ":meth:`API.update_status`"
msgstr ":meth:`API.update_status`"

#: ../../api.rst:63
msgid "`POST statuses/update_with_media`_"
msgstr "`게시: statuses/update_with_media`_"

#: ../../api.rst:63
msgid ":meth:`API.update_status_with_media`"
msgstr ":meth:`API.update_status_with_media`"

#: ../../api.rst:67
msgid "`GET search/tweets`_"
msgstr "`가져오기: search/tweets`_"

#: ../../api.rst:67
msgid ":meth:`API.search_tweets`"
msgstr ":meth:`API.search_tweets`"

#: ../../api.rst:73
msgid "`GET lists/list`_"
msgstr "`가져오기: lists/list`_"

#: ../../api.rst:73
msgid ":meth:`API.get_lists`"
msgstr ":meth:`API.get_lists`"

#: ../../api.rst:75
msgid "`GET lists/members`_"
msgstr "`가져오기: lists/members`_"

#: ../../api.rst:75
msgid ":meth:`API.get_list_members`"
msgstr ":meth:`API.get_list_members`"

#: ../../api.rst:77
msgid "`GET lists/members/show`_"
msgstr "`가져오기: lists/members/show`_"

#: ../../api.rst:77
msgid ":meth:`API.get_list_member`"
msgstr ":meth:`API.get_list_member`"

#: ../../api.rst:79
msgid "`GET lists/memberships`_"
msgstr "`가져오기: lists/memberships`_"

#: ../../api.rst:79
msgid ":meth:`API.get_list_memberships`"
msgstr ":meth:`API.get_list_memberships`"

#: ../../api.rst:81
msgid "`GET lists/ownerships`_"
msgstr "`가져오기: lists/ownerships`_"

#: ../../api.rst:81
msgid ":meth:`API.get_list_ownerships`"
msgstr ":meth:`API.get_list_ownerships`"

#: ../../api.rst:83
msgid "`GET lists/show`_"
msgstr "`가져오기: lists/show`_"

#: ../../api.rst:83
msgid ":meth:`API.get_list`"
msgstr ":meth:`API.get_list`"

#: ../../api.rst:85
msgid "`GET lists/statuses`_"
msgstr "`가져오기: lists/statuses`_"

#: ../../api.rst:85
msgid ":meth:`API.list_timeline`"
msgstr ":meth:`API.list_timeline`"

#: ../../api.rst:87
msgid "`GET lists/subscribers`_"
msgstr "`가져오기: lists/subscribers`_"

#: ../../api.rst:87
msgid ":meth:`API.get_list_subscribers`"
msgstr ":meth:`API.get_list_subscribers`"

#: ../../api.rst:89
msgid "`GET lists/subscribers/show`_"
msgstr "`가져오기: lists/subscribers/show`_"

#: ../../api.rst:89
msgid ":meth:`API.get_list_subscriber`"
msgstr ":meth:`API.get_list_subscriber`"

#: ../../api.rst:91
msgid "`GET lists/subscriptions`_"
msgstr "`가져오기: lists/subscriptions`_"

#: ../../api.rst:91
msgid ":meth:`API.get_list_subscriptions`"
msgstr ":meth:`API.get_list_subscriptions`"

#: ../../api.rst:93
msgid "`POST lists/create`_"
msgstr "`게시: lists/create`_"

#: ../../api.rst:93
msgid ":meth:`API.create_list`"
msgstr ":meth:`API.create_list`"

#: ../../api.rst:95
msgid "`POST lists/destroy`_"
msgstr "`게시: lists/destroy`_"

#: ../../api.rst:95
msgid ":meth:`API.destroy_list`"
msgstr ":meth:`API.destroy_list`"

#: ../../api.rst:97
msgid "`POST lists/members/create`_"
msgstr "`게시: lists/members/create`_"

#: ../../api.rst:97
msgid ":meth:`API.add_list_member`"
msgstr ":meth:`API.add_list_member`"

#: ../../api.rst:99
msgid "`POST lists/members/create_all`_"
msgstr "`게시: lists/members/create_all`_"

#: ../../api.rst:99
msgid ":meth:`API.add_list_members`"
msgstr ":meth:`API.add_list_members`"

#: ../../api.rst:101
msgid "`POST lists/members/destroy`_"
msgstr "`게시: lists/members/destroy`_"

#: ../../api.rst:101
msgid ":meth:`API.remove_list_member`"
msgstr ":meth:`API.remove_list_member`"

#: ../../api.rst:103
msgid "`POST lists/members/destroy_all`_"
msgstr "`게시: lists/members/destroy_all`_"

#: ../../api.rst:103
msgid ":meth:`API.remove_list_members`"
msgstr ":meth:`API.remove_list_members`"

#: ../../api.rst:105
msgid "`POST lists/subscribers/create`_"
msgstr "`게시: lists/subscribers/create`_"

#: ../../api.rst:105
msgid ":meth:`API.subscribe_list`"
msgstr ":meth:`API.subscribe_list`"

#: ../../api.rst:107
msgid "`POST lists/subscribers/destroy`_"
msgstr "`게시: lists/subscribers/destroy`_"

#: ../../api.rst:107
msgid ":meth:`API.unsubscribe_list`"
msgstr ":meth:`API.unsubscribe_list`"

#: ../../api.rst:109
msgid "`POST lists/update`_"
msgstr "`게시: lists/update`_"

#: ../../api.rst:109
msgid ":meth:`API.update_list`"
msgstr ":meth:`API.update_list`"

#: ../../api.rst:113
msgid "`GET followers/ids`_"
msgstr "`가져오기: followers/ids`_"

#: ../../api.rst:113
msgid ":meth:`API.get_follower_ids`"
msgstr ":meth:`API.get_follower_ids`"

#: ../../api.rst:115
msgid "`GET followers/list`_"
msgstr "`가져오기: followers/list`_"

#: ../../api.rst:115
msgid ":meth:`API.get_followers`"
msgstr ":meth:`API.get_followers`"

#: ../../api.rst:117
msgid "`GET friends/ids`_"
msgstr "`가져오기: friends/ids`_"

#: ../../api.rst:117
msgid ":meth:`API.get_friend_ids`"
msgstr ":meth:`API.get_friend_ids`"

#: ../../api.rst:119
msgid "`GET friends/list`_"
msgstr "`가져오기: friends/list`_"

#: ../../api.rst:119
msgid ":meth:`API.get_friends`"
msgstr ":meth:`API.get_friends`"

#: ../../api.rst:121
msgid "`GET friendships/incoming`_"
msgstr "`가져오기: friendships/incoming`_"

#: ../../api.rst:121
msgid ":meth:`API.incoming_friendships`"
msgstr ":meth:`API.incoming_friendships`"

#: ../../api.rst:123
msgid "`GET friendships/lookup`_"
msgstr "`가져오기: friendships/lookup`_"

#: ../../api.rst:123
msgid ":meth:`API.lookup_friendships`"
msgstr ":meth:`API.lookup_friendships`"

#: ../../api.rst:125
msgid "`GET friendships/no_retweets/ids`_"
msgstr "`가져오기: friendships/no_retweets/ids`_"

#: ../../api.rst:125
msgid ":meth:`API.no_retweets_friendships`"
msgstr ":meth:`API.no_retweets_friendships`"

#: ../../api.rst:127
msgid "`GET friendships/outgoing`_"
msgstr "`가져오기: friendships/outgoing`_"

#: ../../api.rst:127
msgid ":meth:`API.outgoing_friendships`"
msgstr ":meth:`API.outgoing_friendships`"

#: ../../api.rst:129
msgid "`GET friendships/show`_"
msgstr "`가져오기: friendships/show`_"

#: ../../api.rst:129
msgid ":meth:`API.get_friendship`"
msgstr ":meth:`API.get_friendship`"

#: ../../api.rst:131
msgid "`GET users/lookup`_"
msgstr "`가져오기: users/lookup`_"

#: ../../api.rst:131
msgid ":meth:`API.lookup_users`"
msgstr ":meth:`API.lookup_users`"

#: ../../api.rst:133
msgid "`GET users/search`_"
msgstr "`가져오기: users/search`_"

#: ../../api.rst:133
msgid ":meth:`API.search_users`"
msgstr ":meth:`API.search_users`"

#: ../../api.rst:135
msgid "`GET users/show`_"
msgstr "`가져오기: users/show`_"

#: ../../api.rst:135
msgid ":meth:`API.get_user`"
msgstr ":meth:`API.get_user`"

#: ../../api.rst:137
msgid "`POST friendships/create`_"
msgstr "`게시: friendships/create`_"

#: ../../api.rst:137
msgid ":meth:`API.create_friendship`"
msgstr ":meth:`API.create_friendship`"

#: ../../api.rst:139
msgid "`POST friendships/destroy`_"
msgstr "`게시: friendships/destroy`_"

#: ../../api.rst:139
msgid ":meth:`API.destroy_friendship`"
msgstr ":meth:`API.destroy_friendship`"

#: ../../api.rst:141
msgid "`POST friendships/update`_"
msgstr "`게시: friendships/update`_"

#: ../../api.rst:141
msgid ":meth:`API.update_friendship`"
msgstr ":meth:`API.update_friendship`"

#: ../../api.rst:145
msgid "`GET account/settings`_"
msgstr "`가져오기: account/settings`_"

#: ../../api.rst:145
msgid ":meth:`API.get_settings`"
msgstr ":meth:`API.get_settings`"

#: ../../api.rst:147
msgid "`GET account/verify_credentials`_"
msgstr "`가져오기: account/verify_credentials`_"

#: ../../api.rst:147
msgid ":meth:`API.verify_credentials`"
msgstr ":meth:`API.verify_credentials`"

#: ../../api.rst:149
msgid "`GET saved_searches/list`_"
msgstr "`가져오기: saved_searches/list`_"

#: ../../api.rst:149
msgid ":meth:`API.get_saved_searches`"
msgstr ":meth:`API.get_saved_searches`"

#: ../../api.rst:151
msgid "`GET saved_searches/show/:id`_"
msgstr "`가져오기: saved_searches/show/:id`_"

#: ../../api.rst:151
msgid ":meth:`API.get_saved_search`"
msgstr ":meth:`API.get_saved_search`"

#: ../../api.rst:153
msgid "`GET users/profile_banner`_"
msgstr "`가져오기: users/profile_banner`_"

#: ../../api.rst:153
msgid ":meth:`API.get_profile_banner`"
msgstr ":meth:`API.get_profile_banner`"

#: ../../api.rst:155
msgid "`POST account/remove_profile_banner`_"
msgstr "`게시: account/remove_profile_banner`_"

#: ../../api.rst:155
msgid ":meth:`API.remove_profile_banner`"
msgstr ":meth:`API.remove_profile_banner`"

#: ../../api.rst:157
msgid "`POST account/settings`_"
msgstr "`게시: account/settings`_"

#: ../../api.rst:157
msgid ":meth:`API.set_settings`"
msgstr ":meth:`API.set_settings`"

#: ../../api.rst:159
msgid "`POST account/update_profile`_"
msgstr "`게시: account/update_profile`_"

#: ../../api.rst:159
msgid ":meth:`API.update_profile`"
msgstr ":meth:`API.update_profile`"

#: ../../api.rst:161
msgid "`POST account/update_profile_banner`_"
msgstr "`게시: account/update_profile_banner`_"

#: ../../api.rst:161
msgid ":meth:`API.update_profile_banner`"
msgstr ":meth:`API.update_profile_banner`"

#: ../../api.rst:163
msgid "`POST account/update_profile_image`_"
msgstr "`게시: account/update_profile_image`_"

#: ../../api.rst:163
msgid ":meth:`API.update_profile_image`"
msgstr ":meth:`API.update_profile_image`"

#: ../../api.rst:165
msgid "`POST saved_searches/create`_"
msgstr "`게시: saved_searches/create`_"

#: ../../api.rst:165
msgid ":meth:`API.create_saved_search`"
msgstr ":meth:`API.create_saved_search`"

#: ../../api.rst:167
msgid "`POST saved_searches/destroy/:id`_"
msgstr "`게시: saved_searches/destroy/:id`_"

#: ../../api.rst:167
msgid ":meth:`API.destroy_saved_search`"
msgstr ":meth:`API.destroy_saved_search`"

#: ../../api.rst:171
msgid "`GET blocks/ids`_"
msgstr "`가져오기: blocks/ids`_"

#: ../../api.rst:171
msgid ":meth:`API.get_blocked_ids`"
msgstr ":meth:`API.get_blocked_ids`"

#: ../../api.rst:173
msgid "`GET blocks/list`_"
msgstr "`가져오기: blocks/list`_"

#: ../../api.rst:173
msgid ":meth:`API.get_blocks`"
msgstr ":meth:`API.get_blocks`"

#: ../../api.rst:175
msgid "`GET mutes/users/ids`_"
msgstr "`가져오기: mutes/users/ids`_"

#: ../../api.rst:175
msgid ":meth:`API.get_muted_ids`"
msgstr ":meth:`API.get_muted_ids`"

#: ../../api.rst:177
msgid "`GET mutes/users/list`_"
msgstr "`가져오기: mutes/users/list`_"

#: ../../api.rst:177
msgid ":meth:`API.get_mutes`"
msgstr ":meth:`API.get_mutes`"

#: ../../api.rst:179
msgid "`POST blocks/create`_"
msgstr "`게시: blocks/create`_"

#: ../../api.rst:179
msgid ":meth:`API.create_block`"
msgstr ":meth:`API.create_block`"

#: ../../api.rst:181
msgid "`POST blocks/destroy`_"
msgstr "`게시: blocks/destroy`_"

#: ../../api.rst:181
msgid ":meth:`API.destroy_block`"
msgstr ":meth:`API.destroy_block`"

#: ../../api.rst:183
msgid "`POST mutes/users/create`_"
msgstr "`게시: mutes/users/create`_"

#: ../../api.rst:183
msgid ":meth:`API.create_mute`"
msgstr ":meth:`API.create_mute`"

#: ../../api.rst:185
msgid "`POST mutes/users/destroy`_"
msgstr "`게시: mutes/users/destroy`_"

#: ../../api.rst:185
msgid ":meth:`API.destroy_mute`"
msgstr ":meth:`API.destroy_mute`"

#: ../../api.rst:187
msgid "`POST users/report_spam`_"
msgstr "`게시: users/report_spam`_"

#: ../../api.rst:187
msgid ":meth:`API.report_spam`"
msgstr ":meth:`API.report_spam`"

#: ../../api.rst:193
msgid "`DELETE direct_messages/events/destroy`_"
msgstr "`DELETE direct_messages/events/destroy`_"

#: ../../api.rst:193
msgid ":meth:`API.delete_direct_message`"
msgstr ":meth:`API.delete_direct_message`"

#: ../../api.rst:195
msgid "`GET direct_messages/events/list`_"
msgstr "`가져오기: direct_messages/events/list`_"

#: ../../api.rst:195
msgid ":meth:`API.get_direct_messages`"
msgstr ":meth:`API.get_direct_messages`"

#: ../../api.rst:197
msgid "`GET direct_messages/events/show`_"
msgstr "`가져오기: direct_messages/events/show`_"

#: ../../api.rst:197
msgid ":meth:`API.get_direct_message`"
msgstr ":meth:`API.get_direct_message`"

#: ../../api.rst:199
msgid "`POST direct_messages/events/new`_"
msgstr "`게시: direct_messages/events/new`_"

#: ../../api.rst:199
msgid ":meth:`API.send_direct_message`"
msgstr ":meth:`API.send_direct_message`"

#: ../../api.rst:205
msgid "`GET media/upload`_"
msgstr "`가져오기: media/upload`_"

#: ../../api.rst:205
msgid ":meth:`API.get_media_upload_status`"
msgstr ":meth:`API.get_media_upload_status`"

#: ../../api.rst:207
msgid "`POST media/metadata/create`_"
msgstr "`게시: media/metadata/create`_"

#: ../../api.rst:207
msgid ":meth:`API.create_media_metadata`"
msgstr ":meth:`API.create_media_metadata`"

#: ../../api.rst:209
msgid ":meth:`API.media_upload`"
msgstr ":meth:`API.media_upload`"

#: ../../api.rst:211
msgid "`POST media/upload`_"
msgstr "`게시: media/upload`_"

#: ../../api.rst:211
msgid ":meth:`API.simple_upload`"
msgstr ":meth:`API.simple_upload`"

#: ../../api.rst:213
msgid ":meth:`API.chunked_upload`"
msgstr ":meth:`API.chunked_upload`"

#: ../../api.rst:215
msgid "`POST media/upload (APPEND)`_"
msgstr "`게시: media/upload (APPEND)`_"

#: ../../api.rst:215
msgid ":meth:`API.chunked_upload_append`"
msgstr ":meth:`API.chunked_upload_append`"

#: ../../api.rst:217
msgid "`POST media/upload (FINALIZE)`_"
msgstr "`게시: media/upload (FINALIZE)`_"

#: ../../api.rst:217
msgid ":meth:`API.chunked_upload_finalize`"
msgstr ":meth:`API.chunked_upload_finalize`"

#: ../../api.rst:219
msgid "`POST media/upload (INIT)`_"
msgstr "`게시: media/upload (INIT)`_"

#: ../../api.rst:219
msgid ":meth:`API.chunked_upload_init`"
msgstr ":meth:`API.chunked_upload_init`"

#: ../../api.rst:225
msgid "`GET trends/available`_"
msgstr "`가져오기: trends/available`_"

#: ../../api.rst:225
msgid ":meth:`API.available_trends`"
msgstr ":meth:`API.available_trends`"

#: ../../api.rst:227
msgid "`GET trends/closest`_"
msgstr "`가져오기: trends/closest`_"

#: ../../api.rst:227
msgid ":meth:`API.closest_trends`"
msgstr ":meth:`API.closest_trends`"

#: ../../api.rst:231
msgid "`GET trends/place`_"
msgstr "`가져오기: trends/place`_"

#: ../../api.rst:231
msgid ":meth:`API.get_place_trends`"
msgstr ":meth:`API.get_place_trends`"

#: ../../api.rst:237
msgid "`GET geo/id/:place_id`_"
msgstr "`가져오기: geo/id/:place_id`_"

#: ../../api.rst:237
msgid ":meth:`API.geo_id`"
msgstr ":meth:`API.geo_id`"

#: ../../api.rst:241
msgid "`GET geo/reverse_geocode`_"
msgstr "`가져오기: geo/reverse_geocode`_"

#: ../../api.rst:241
msgid ":meth:`API.reverse_geocode`"
msgstr ":meth:`API.reverse_geocode`"

#: ../../api.rst:243
msgid "`GET geo/search`_"
msgstr "`가져오기: geo/search`_"

#: ../../api.rst:243
msgid ":meth:`API.search_geo`"
msgstr ":meth:`API.search_geo`"

#: ../../api.rst:249
msgid "`GET help/languages`_"
msgstr "`가져오기: help/languages`_"

#: ../../api.rst:249
msgid ":meth:`API.supported_languages`"
msgstr ":meth:`API.supported_languages`"

#: ../../api.rst:253
msgid "`GET application/rate_limit_status`_"
msgstr "`가져오기: application/rate_limit_status`_"

#: ../../api.rst:253
msgid ":meth:`API.rate_limit_status`"
msgstr ":meth:`API.rate_limit_status`"

#: ../../api.rst:366
msgid "Premium Search APIs"
msgstr "프리미엄 검색 API"

#: of tweepy.api.API.search_30_day:1
msgid "Premium search that provides Tweets posted within the last 30 days."
msgstr "최근 30일 이내에 작성된 트윗을 제공해주는 프리미엄 검색입니다."

#: of tweepy.api.API.search_30_day:3 tweepy.api.API.search_full_archive:4
msgid ""
"The (case-sensitive) label associated with your search developer "
"environment, as displayed at "
"https://developer.twitter.com/en/account/environments."
msgstr ""
"https://developer.twitter.com/en/account/environments에 표시되는, "
"검색 개발자 환경과 관련된 (대소문자를 구분하는) 라벨(label)입니다. "

#: of tweepy.api.API.search_30_day:6 tweepy.api.API.search_full_archive:7
msgid ""
"The equivalent of one premium rule/filter, with up to 1,024 characters "
"(256 with Sandbox dev environments).  This parameter should include ALL "
"portions of the rule/filter, including all operators, and portions of the"
" rule should not be separated into other parameters of the query."
msgstr ""
"최대 1,024자(단, 샌드박스 개발 환경의 경우 256자)의 프리미엄 규칙·필터 1개와 같습니다. "
"이 매개변수에는, (모든 연산자를 포함해) 규칙·필터의 모든 부분이 포함되어야 하며, "
"규칙의 일부가 쿼리의 다른 매개변수로 분리되지 않아야 합니다. "

#: of tweepy.api.API.search_30_day:6 tweepy.api.API.search_full_archive:7
msgid ""
"The equivalent of one premium rule/filter, with up to 1,024 characters "
"(256 with Sandbox dev environments)."
msgstr "최대 1,024자(단, 샌드박스 개발 환경의 경우 256자)의 프리미엄 규칙·필터 1개와 같습니다. "

#: of tweepy.api.API.search_30_day:9 tweepy.api.API.search_full_archive:10
msgid ""
"This parameter should include ALL portions of the rule/filter, including "
"all operators, and portions of the rule should not be separated into "
"other parameters of the query."
msgstr ""
"이 매개변수에는, (모든 연산자를 포함해) 규칙·필터의 모든 부분이 포함되어야 하며, "
"규칙의 일부가 쿼리의 다른 매개변수로 분리되지 않아야 합니다. "

#: of tweepy.api.API.search_30_day:12 tweepy.api.API.search_full_archive:13
msgid ""
"Tags can be used to segregate rules and their matching data into "
"different logical groups. If a rule tag is provided, the rule tag is "
"included in the 'matching_rules' attribute.  It is recommended to assign "
"rule-specific UUIDs to rule tags and maintain desired mappings on the "
"client side."
msgstr ""
"태그(Tags)는 특정 규칙과 일치하는 데이터를 다른 논리 그룹으로 분리하는 데 사용할 수 있습니다. "
"규칙 태그가 지정된 경우, 이는 'matching_rules' 특성에 포함되게 됩니다. "
"각 규칙 태그에 규칙별 UUID를 할당하고, "
"클라이언트 측에서 원하는 매핑을 유지하도록 하는 것이 권장됩니다."

#: of tweepy.api.API.search_30_day:12 tweepy.api.API.search_full_archive:13
msgid ""
"Tags can be used to segregate rules and their matching data into "
"different logical groups. If a rule tag is provided, the rule tag is "
"included in the 'matching_rules' attribute."
msgstr ""
"태그(Tags)는 특정 규칙과 일치하는 데이터를 다른 논리 그룹으로 분리하는 데 사용할 수 있습니다."
"규칙 태그가 지정된 경우, 이는 'matching_rules' 특성에 포함되게 됩니다."

#: of tweepy.api.API.search_30_day:16 tweepy.api.API.search_full_archive:17
msgid ""
"It is recommended to assign rule-specific UUIDs to rule tags and maintain"
" desired mappings on the client side."
msgstr ""
"각 규칙 태그에 규칙별 UUID를 할당하고, "
"클라이언트 측에서 원하는 매핑을 유지하도록 하는 것이 권장됩니다."

#: of tweepy.api.API.search_30_day:18 tweepy.api.API.search_full_archive:19
msgid ""
"The oldest UTC timestamp (from most recent 30 days) from which the Tweets"
" will be provided. Timestamp is in minute granularity and is inclusive "
"(i.e. 12:00 includes the 00 minute).  Specified: Using only the fromDate "
"with no toDate parameter will deliver results for the query going back in"
" time from now( ) until the fromDate.  Not Specified: If a fromDate is "
"not specified, the API will deliver all of the results for 30 days prior "
"to now( ) or the toDate (if specified).  If neither the fromDate or "
"toDate parameter is used, the API will deliver all results for the most "
"recent 30 days, starting at the time of the request, going backwards."
msgstr ""
"제공받을 트윗의 기준 날짜(최대 30일 이전까지)입니다."
"타임스탬프는 분 단위 값이며, 포함적입니다(예로, 12:00은 00분의 시점도 포함합니다)."
"값이 지정된 경우: toDate값 없이 fromDate값만 사용할 경우, "
"현재부터 fromDate까지의 쿼리 결과를 제공합니다."
"값이 지정되지 않은 경우: fromDate값이 지정되지 않은 경우, "
"API는 현재 또는 toDate(지정된 경우)의 30일 이전까지의 쿼리 결과를 제공합니다."
"fromDate 또는 toDate값이 둘 다 없을 경우, "
"API는 현재 기준 30일 이전까지의 쿼리 결과를 제공합니다."

#: of tweepy.api.API.search_30_day:18 tweepy.api.API.search_full_archive:19
msgid ""
"The oldest UTC timestamp (from most recent 30 days) from which the Tweets"
" will be provided. Timestamp is in minute granularity and is inclusive "
"(i.e. 12:00 includes the 00 minute)."
msgstr ""
"제공받을 트윗의 기준 날짜 시작점(최대 30일 이전까지)입니다."
"타임스탬프는 분 단위 값이며, 포함적입니다(예로, 12:00은 00분의 시점도 포함합니다)."

#: of tweepy.api.API.search_30_day:22 tweepy.api.API.search_full_archive:23
msgid ""
"Specified: Using only the fromDate with no toDate parameter will deliver "
"results for the query going back in time from now( ) until the fromDate."
msgstr ""
"값이 지정된 경우: toDate값 없이 fromDate값만 사용할 경우, "
"now()부터 fromDate까지의 쿼리 결과를 제공합니다."

#: of tweepy.api.API.search_30_day:26 tweepy.api.API.search_full_archive:27
msgid ""
"Not Specified: If a fromDate is not specified, the API will deliver all "
"of the results for 30 days prior to now( ) or the toDate (if specified)."
msgstr ""
"값이 지정되지 않은 경우: fromDate값이 지정되지 않은 경우, "
"API는 now() 또는 toDate(지정된 경우)의 30일 이전까지의 쿼리 결과를 제공합니다."

#: of tweepy.api.API.search_30_day:30 tweepy.api.API.search_full_archive:31
msgid ""
"If neither the fromDate or toDate parameter is used, the API will deliver"
" all results for the most recent 30 days, starting at the time of the "
"request, going backwards."
msgstr ""
"fromDate 또는 toDate값이 둘 다 없을 경우, "
"API는 현재 기준 30일 이전까지의 쿼리 결과를 제공합니다."

#: of tweepy.api.API.search_30_day:33 tweepy.api.API.search_full_archive:34
msgid ""
"The latest, most recent UTC timestamp to which the Tweets will be "
"provided. Timestamp is in minute granularity and is not inclusive (i.e. "
"11:59 does not include the 59th minute of the hour).  Specified: Using "
"only the toDate with no fromDate parameter will deliver the most recent "
"30 days of data prior to the toDate.  Not Specified: If a toDate is not "
"specified, the API will deliver all of the results from now( ) for the "
"query going back in time to the fromDate.  If neither the fromDate or "
"toDate parameter is used, the API will deliver all results for the entire"
" 30-day index, starting at the time of the request, going backwards."
msgstr ""
"제공받을 트윗의 기준 날짜 종점입니다."
"타임스탬프는 분 단위 값이며, 비포함적입니다(예로, 11:59는 59분을 포함하지 않습니다)."
"값이 지정된 경우: fromDate값 없이 toDate만 사용하면, "
"API는 now() 또는 toDate(지정된 경우)의 30일 이전까지의 쿼리 결과를 제공합니다."
"값이 지정되지 않은 경우: toDate값이 지정되지 않은 경우, "
"현재부터 fromDate까지의 쿼리 결과를 제공합니다."
"fromDate 또는 toDate값이 둘 다 없을 경우, "
"API는 현재 기준 30일 이전까지의 쿼리 결과를 제공합니다."

#: of tweepy.api.API.search_30_day:33 tweepy.api.API.search_full_archive:34
msgid ""
"The latest, most recent UTC timestamp to which the Tweets will be "
"provided. Timestamp is in minute granularity and is not inclusive (i.e. "
"11:59 does not include the 59th minute of the hour)."
msgstr ""
"제공받을 트윗의 기준 날짜 종점입니다."
"타임스탬프는 분 단위 값이며, 비포함적입니다(예로, 11:59는 59분을 포함하지 않습니다)."

#: of tweepy.api.API.search_30_day:37 tweepy.api.API.search_full_archive:38
msgid ""
"Specified: Using only the toDate with no fromDate parameter will deliver "
"the most recent 30 days of data prior to the toDate."
msgstr ""
"값이 지정된 경우: fromDate값 없이 toDate만 사용하면, "
"API는 now() 또는 toDate(지정된 경우)의 30일 이전까지의 쿼리 결과를 제공합니다."

#: of tweepy.api.API.search_30_day:40 tweepy.api.API.search_full_archive:41
msgid ""
"Not Specified: If a toDate is not specified, the API will deliver all of "
"the results from now( ) for the query going back in time to the fromDate."
msgstr ""
"값이 지정되지 않은 경우: toDate값이 지정되지 않은 경우, "
"현재부터 fromDate까지의 쿼리 결과를 제공합니다."

#: of tweepy.api.API.search_30_day:44 tweepy.api.API.search_full_archive:45
msgid ""
"If neither the fromDate or toDate parameter is used, the API will deliver"
" all results for the entire 30-day index, starting at the time of the "
"request, going backwards."
msgstr ""
"fromDate 또는 toDate값이 둘 다 없을 경우, "
"API는 현재 기준 30일 이전까지의 쿼리 결과를 제공합니다."

#: of tweepy.api.API.search_30_day:47 tweepy.api.API.search_full_archive:48
msgid ""
"The maximum number of search results to be returned by a request. A "
"number between 10 and the system limit (currently 500, 100 for Sandbox "
"environments). By default, a request response will return 100 results."
msgstr ""
"요청으로 반환받을 검색 결과 수의 최댓값입니다."
"10부터 시스템 제한 수치 사이의 정수값(현재 샌드박스 환경의 경우 500 또는 100)이며, "
"기본값은 100입니다(최대 100개의 검색 결과를 반환합니다)."

#: of tweepy.api.API.search_30_day:51 tweepy.api.API.search_full_archive:52
msgid ""
"This parameter is used to get the next 'page' of results. The value used "
"with the parameter is pulled directly from the response provided by the "
"API, and should not be modified."
msgstr ""
"이 매개변수는 결과의 다음 '페이지'를 가져오는 데 사용됩니다."
"매개변수에 사용된 값은 API 응답에서 직접 가져오게 되므로, "
"수정하지 않아야 합니다."

#: of tweepy.api.API.add_list_member tweepy.api.API.add_list_members
#: tweepy.api.API.available_trends tweepy.api.API.chunked_upload
#: tweepy.api.API.chunked_upload_finalize tweepy.api.API.chunked_upload_init
#: tweepy.api.API.closest_trends tweepy.api.API.create_block
#: tweepy.api.API.create_favorite tweepy.api.API.create_friendship
#: tweepy.api.API.create_list tweepy.api.API.create_mute
#: tweepy.api.API.create_saved_search tweepy.api.API.destroy_block
#: tweepy.api.API.destroy_favorite tweepy.api.API.destroy_friendship
#: tweepy.api.API.destroy_list tweepy.api.API.destroy_mute
#: tweepy.api.API.destroy_saved_search tweepy.api.API.destroy_status
#: tweepy.api.API.geo_id tweepy.api.API.get_blocked_ids
#: tweepy.api.API.get_blocks tweepy.api.API.get_direct_message
#: tweepy.api.API.get_direct_messages tweepy.api.API.get_favorites
#: tweepy.api.API.get_follower_ids tweepy.api.API.get_followers
#: tweepy.api.API.get_friend_ids tweepy.api.API.get_friends
#: tweepy.api.API.get_friendship tweepy.api.API.get_list
#: tweepy.api.API.get_list_member tweepy.api.API.get_list_members
#: tweepy.api.API.get_list_memberships tweepy.api.API.get_list_ownerships
#: tweepy.api.API.get_list_subscriber tweepy.api.API.get_list_subscribers
#: tweepy.api.API.get_list_subscriptions tweepy.api.API.get_lists
#: tweepy.api.API.get_media_upload_status tweepy.api.API.get_muted_ids
#: tweepy.api.API.get_mutes tweepy.api.API.get_oembed
#: tweepy.api.API.get_place_trends tweepy.api.API.get_profile_banner
#: tweepy.api.API.get_retweeter_ids tweepy.api.API.get_retweets
#: tweepy.api.API.get_retweets_of_me tweepy.api.API.get_saved_search
#: tweepy.api.API.get_saved_searches tweepy.api.API.get_settings
#: tweepy.api.API.get_status tweepy.api.API.get_user
#: tweepy.api.API.home_timeline tweepy.api.API.incoming_friendships
#: tweepy.api.API.list_timeline tweepy.api.API.lookup_friendships
#: tweepy.api.API.lookup_statuses tweepy.api.API.lookup_users
#: tweepy.api.API.media_upload tweepy.api.API.mentions_timeline
#: tweepy.api.API.no_retweets_friendships tweepy.api.API.outgoing_friendships
#: tweepy.api.API.rate_limit_status tweepy.api.API.remove_list_member
#: tweepy.api.API.remove_list_members tweepy.api.API.report_spam
#: tweepy.api.API.retweet tweepy.api.API.reverse_geocode
#: tweepy.api.API.search_30_day tweepy.api.API.search_full_archive
#: tweepy.api.API.search_geo tweepy.api.API.search_tweets
#: tweepy.api.API.search_users tweepy.api.API.send_direct_message
#: tweepy.api.API.set_settings tweepy.api.API.simple_upload
#: tweepy.api.API.subscribe_list tweepy.api.API.supported_languages
#: tweepy.api.API.unretweet tweepy.api.API.unsubscribe_list
#: tweepy.api.API.update_friendship tweepy.api.API.update_list
#: tweepy.api.API.update_profile tweepy.api.API.update_profile_image
#: tweepy.api.API.update_status tweepy.api.API.update_status_with_media
#: tweepy.api.API.user_timeline tweepy.api.API.verify_credentials
msgid "Returns"
msgstr "반환값"

#: of tweepy.api.API.add_list_member tweepy.api.API.add_list_members
#: tweepy.api.API.available_trends tweepy.api.API.chunked_upload
#: tweepy.api.API.chunked_upload_finalize tweepy.api.API.chunked_upload_init
#: tweepy.api.API.closest_trends tweepy.api.API.create_block
#: tweepy.api.API.create_favorite tweepy.api.API.create_friendship
#: tweepy.api.API.create_list tweepy.api.API.create_mute
#: tweepy.api.API.create_saved_search tweepy.api.API.destroy_block
#: tweepy.api.API.destroy_favorite tweepy.api.API.destroy_friendship
#: tweepy.api.API.destroy_list tweepy.api.API.destroy_mute
#: tweepy.api.API.destroy_saved_search tweepy.api.API.destroy_status
#: tweepy.api.API.geo_id tweepy.api.API.get_blocked_ids
#: tweepy.api.API.get_blocks tweepy.api.API.get_direct_message
#: tweepy.api.API.get_direct_messages tweepy.api.API.get_favorites
#: tweepy.api.API.get_follower_ids tweepy.api.API.get_followers
#: tweepy.api.API.get_friend_ids tweepy.api.API.get_friends
#: tweepy.api.API.get_friendship tweepy.api.API.get_list
#: tweepy.api.API.get_list_member tweepy.api.API.get_list_members
#: tweepy.api.API.get_list_memberships tweepy.api.API.get_list_ownerships
#: tweepy.api.API.get_list_subscriber tweepy.api.API.get_list_subscribers
#: tweepy.api.API.get_list_subscriptions tweepy.api.API.get_lists
#: tweepy.api.API.get_media_upload_status tweepy.api.API.get_muted_ids
#: tweepy.api.API.get_mutes tweepy.api.API.get_oembed
#: tweepy.api.API.get_place_trends tweepy.api.API.get_profile_banner
#: tweepy.api.API.get_retweeter_ids tweepy.api.API.get_retweets
#: tweepy.api.API.get_retweets_of_me tweepy.api.API.get_saved_search
#: tweepy.api.API.get_saved_searches tweepy.api.API.get_settings
#: tweepy.api.API.get_status tweepy.api.API.get_user
#: tweepy.api.API.home_timeline tweepy.api.API.incoming_friendships
#: tweepy.api.API.list_timeline tweepy.api.API.lookup_friendships
#: tweepy.api.API.lookup_statuses tweepy.api.API.lookup_users
#: tweepy.api.API.media_upload tweepy.api.API.mentions_timeline
#: tweepy.api.API.no_retweets_friendships tweepy.api.API.outgoing_friendships
#: tweepy.api.API.rate_limit_status tweepy.api.API.remove_list_member
#: tweepy.api.API.remove_list_members tweepy.api.API.report_spam
#: tweepy.api.API.retweet tweepy.api.API.reverse_geocode
#: tweepy.api.API.search_30_day tweepy.api.API.search_full_archive
#: tweepy.api.API.search_geo tweepy.api.API.search_tweets
#: tweepy.api.API.search_users tweepy.api.API.send_direct_message
#: tweepy.api.API.set_settings tweepy.api.API.simple_upload
#: tweepy.api.API.subscribe_list tweepy.api.API.supported_languages
#: tweepy.api.API.unretweet tweepy.api.API.unsubscribe_list
#: tweepy.api.API.update_friendship tweepy.api.API.update_list
#: tweepy.api.API.update_profile tweepy.api.API.update_profile_image
#: tweepy.api.API.update_status tweepy.api.API.update_status_with_media
#: tweepy.api.API.user_timeline tweepy.api.API.verify_credentials
msgid "Return type"
msgstr "반환 형식"

#: of tweepy.api.API.get_favorites:12 tweepy.api.API.get_retweets:8
#: tweepy.api.API.get_retweets_of_me:12 tweepy.api.API.home_timeline:13
#: tweepy.api.API.list_timeline:19 tweepy.api.API.lookup_statuses:13
#: tweepy.api.API.mentions_timeline:10 tweepy.api.API.search_30_day:56
#: tweepy.api.API.search_full_archive:57 tweepy.api.API.user_timeline:19
msgid ":py:class:`List`\\[:class:`~tweepy.models.Status`]"
msgstr ":py:class:`List`\\[:class:`~tweepy.models.Status`]"

#: of tweepy.api.API.search_30_day:60 tweepy.api.API.search_full_archive:61
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/premium/search-api/api-"
"reference/premium-search"
msgstr "https://developer.twitter.com/en/docs/twitter-api/premium/search-api/api-reference/premium-search"

#: of tweepy.api.API.search_full_archive:1
msgid ""
"Premium search that provides Tweets from as early as 2006, starting with "
"the first Tweet posted in March 2006."
msgstr "2006년 3월에 게시된 첫 번째 트윗부터 검색 및 제공해주는 프리미엄 검색입니다."

#: ../../api.rst:373
msgid "Tweets"
msgstr "트윗"

#: ../../api.rst:376
msgid "Get Tweet timelines"
msgstr "트윗 타임라인 가져오기"

#: of tweepy.api.API.home_timeline:1
msgid ""
"Returns the 20 most recent statuses, including retweets, posted by the "
"authenticating user and that user's friends. This is the equivalent of "
"/timeline/home on the Web."
msgstr ""
"현재 인증된 사용자 또는 지정된 사용자의 트윗 및 리트윗을 포함하는 "
"트윗(status) 중 가장 최근의 20개를 반환합니다. 웹 상에서의 /timeline/home와 일치합니다."

#: of tweepy.api.API.get_direct_messages:4 tweepy.api.API.get_favorites:6
#: tweepy.api.API.get_follower_ids:8 tweepy.api.API.get_followers:8
#: tweepy.api.API.get_friend_ids:8 tweepy.api.API.get_friends:7
#: tweepy.api.API.get_list_members:7 tweepy.api.API.get_list_memberships:7
#: tweepy.api.API.get_list_ownerships:8 tweepy.api.API.get_list_subscribers:8
#: tweepy.api.API.get_list_subscriptions:6 tweepy.api.API.get_retweeter_ids:5
#: tweepy.api.API.get_retweets:4 tweepy.api.API.get_retweets_of_me:4
#: tweepy.api.API.home_timeline:5 tweepy.api.API.list_timeline:11
#: tweepy.api.API.mentions_timeline:3 tweepy.api.API.search_tweets:39
#: tweepy.api.API.search_users:8 tweepy.api.API.user_timeline:8
msgid "|count|"
msgstr "각 페이지당 보여질 결과 수."

#: of tweepy.api.API.get_favorites:7 tweepy.api.API.get_retweets_of_me:5
#: tweepy.api.API.home_timeline:6 tweepy.api.API.list_timeline:9
#: tweepy.api.API.mentions_timeline:4 tweepy.api.API.user_timeline:7
msgid "|since_id|"
msgstr "지정한 ID보다 더 큰 ID값을 가지는 객체(즉, 지정한 객체보다 더 최근의 객체)만을 반환함."

#: of tweepy.api.API.get_favorites:8 tweepy.api.API.get_retweets_of_me:6
#: tweepy.api.API.home_timeline:7 tweepy.api.API.list_timeline:10
#: tweepy.api.API.mentions_timeline:5 tweepy.api.API.search_tweets:48
#: tweepy.api.API.user_timeline:9
msgid "|max_id|"
msgstr "지정한 ID보다 더 작은 ID값을 가지는 객체(즉, 지정한 객체보다 더 이전의 객체)만을 반환함."

#: of tweepy.api.API.destroy_status:5 tweepy.api.API.get_retweets:5
#: tweepy.api.API.get_retweets_of_me:7 tweepy.api.API.get_status:4
#: tweepy.api.API.home_timeline:8 tweepy.api.API.lookup_statuses:6
#: tweepy.api.API.mentions_timeline:6 tweepy.api.API.retweet:4
#: tweepy.api.API.unretweet:5 tweepy.api.API.update_status:56
#: tweepy.api.API.user_timeline:10
msgid "|trim_user|"
msgstr "유저 ID가 반드시 유저 객체 대신 제공되어야 하는지를 나타내는 boolean 형태의 변수. 기본값은 False."

#: of tweepy.api.API.home_timeline:9 tweepy.api.API.user_timeline:11
msgid "|exclude_replies|"
msgstr "가져온 타임라인에서 답글(멘션)이 반환되지 않도록 합니다. "
"``count`` 값과 함께 ``exclude_replies`` 를 사용하면 보다 최신 트윗까지 받을 수 있는데, "
"이는 ``count`` 를 단독으로 사용하면 리트윗과 답글도 결과값에 포함되기 때문입니다."

#: of tweepy.api.API.create_block:8 tweepy.api.API.create_favorite:5
#: tweepy.api.API.destroy_block:6 tweepy.api.API.destroy_favorite:5
#: tweepy.api.API.get_blocks:4 tweepy.api.API.get_favorites:9
#: tweepy.api.API.get_list_member:9 tweepy.api.API.get_list_members:9
#: tweepy.api.API.get_list_subscriber:9 tweepy.api.API.get_list_subscribers:10
#: tweepy.api.API.get_mutes:4 tweepy.api.API.get_retweets_of_me:8
#: tweepy.api.API.get_status:9 tweepy.api.API.get_user:5
#: tweepy.api.API.home_timeline:10 tweepy.api.API.list_timeline:12
#: tweepy.api.API.lookup_statuses:5 tweepy.api.API.lookup_users:12
#: tweepy.api.API.mentions_timeline:7 tweepy.api.API.search_tweets:49
#: tweepy.api.API.search_users:9 tweepy.api.API.update_profile:14
#: tweepy.api.API.update_profile_image:6 tweepy.api.API.verify_credentials:3
msgid "|include_entities|"
msgstr "False로 설정하면 엔티티 노드가 포함되지 않음. 기본값은 True."

#: of tweepy.api.API.home_timeline:17
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/timelines"
"/api-reference/get-statuses-home_timeline"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/timelines"
"/api-reference/get-statuses-home_timeline"

#: of tweepy.api.API.mentions_timeline:1
msgid "Returns the 20 most recent mentions, including retweets."
msgstr "리트윗을 포함하여, 가장 최근의 멘션 20개를 반환합니다."

#: of tweepy.api.API.mentions_timeline:14
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/timelines"
"/api-reference/get-statuses-mentions_timeline"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/timelines"
"/api-reference/get-statuses-mentions_timeline"

#: of tweepy.api.API.user_timeline:1
msgid ""
"Returns the 20 most recent statuses posted from the authenticating user "
"or the user specified. It's also possible to request another user's "
"timeline via the id parameter."
msgstr ""
"현재 인증된 사용자 또는 지정한 사용자의 최근 트윗(status) 20개를 반환합니다."
"id값을 통해, 다른 사용자의 타임라인을 불러오는 것도 가능합니다."

#: of tweepy.api.API.add_list_member:6 tweepy.api.API.create_block:7
#: tweepy.api.API.create_friendship:4 tweepy.api.API.create_mute:5
#: tweepy.api.API.destroy_block:5 tweepy.api.API.destroy_friendship:4
#: tweepy.api.API.destroy_mute:5 tweepy.api.API.get_favorites:4
#: tweepy.api.API.get_follower_ids:4 tweepy.api.API.get_followers:5
#: tweepy.api.API.get_friend_ids:4 tweepy.api.API.get_friends:4
#: tweepy.api.API.get_list_member:5 tweepy.api.API.get_list_memberships:5
#: tweepy.api.API.get_list_ownerships:6 tweepy.api.API.get_list_subscriber:7
#: tweepy.api.API.get_list_subscriptions:4 tweepy.api.API.get_lists:13
#: tweepy.api.API.get_profile_banner:8 tweepy.api.API.get_user:3
#: tweepy.api.API.remove_list_member:6 tweepy.api.API.report_spam:4
#: tweepy.api.API.update_friendship:4 tweepy.api.API.user_timeline:5
msgid "|user_id|"
msgstr ""
"특정 사용자의 일련번호값."
"user_name와 screen_name이 같을 때, 이 매개변수를 사용하면 좋습니다."

#: of tweepy.api.API.add_list_member:7 tweepy.api.API.create_block:6
#: tweepy.api.API.create_friendship:3 tweepy.api.API.create_mute:4
#: tweepy.api.API.destroy_block:4 tweepy.api.API.destroy_friendship:3
#: tweepy.api.API.destroy_mute:4 tweepy.api.API.get_favorites:5
#: tweepy.api.API.get_follower_ids:5 tweepy.api.API.get_followers:6
#: tweepy.api.API.get_friend_ids:5 tweepy.api.API.get_friends:5
#: tweepy.api.API.get_list_member:6 tweepy.api.API.get_list_memberships:6
#: tweepy.api.API.get_list_ownerships:7 tweepy.api.API.get_list_subscriber:8
#: tweepy.api.API.get_list_subscriptions:5 tweepy.api.API.get_lists:14
#: tweepy.api.API.get_profile_banner:9 tweepy.api.API.get_user:4
#: tweepy.api.API.remove_list_member:7 tweepy.api.API.report_spam:3
#: tweepy.api.API.update_friendship:3 tweepy.api.API.user_timeline:6
msgid "|screen_name|"
msgstr ""
"사용자 아이디(예: @pinkrabbit412에서의 ``pinkrabbit412`` ). "
"어떤 값이 유효한 사용자 아이디인지, 유효한 일련번호인지를 확실히 해야 할 때 도움이 됩니다."

#: of tweepy.api.API.user_timeline:12
msgid ""
"When set to ``false``, the timeline will strip any native retweets "
"(though they will still count toward both the maximal length of the "
"timeline and the slice selected by the count parameter). Note: If you're "
"using the trim_user parameter in conjunction with include_rts, the "
"retweets will still contain a full user object."
msgstr ""
"``false`` 로 설정된 경우, 타임라인에서 리트윗들을 모두 제거합니다."
"(단, 타임라인의 최대 길이 제한이나 count에 의해 선택된 슬라이스(Slice)에는 계산됩니다)"
"참고: trim_user 매개변수를 include_rts와 함께 사용하는 경우에도"
"리트윗에는 사용자 개체가 전체 포함됩니다."

#: of tweepy.api.API.user_timeline:23
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/timelines"
"/api-reference/get-statuses-user_timeline"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/timelines"
"/api-reference/get-statuses-user_timeline"

#: ../../api.rst:385
msgid "Post, retrieve, and engage with Tweets"
msgstr "트윗의 게시, 검색 및 참여"

#: of tweepy.api.API.get_favorites:1
msgid ""
"Returns the favorite statuses for the authenticating user or user "
"specified by the ID parameter."
msgstr ""
"현재 인증된 사용자 또는 지정한 사용자의 최근 '마음에 들어요' 20개를 반환합니다."
"id값을 통해, 다른 사용자의 '마음의 들어요'를 불러오는 것도 가능합니다."

#: of tweepy.api.API.get_favorites:16
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/get-favorites-list"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/get-favorites-list"

#: of tweepy.api.API.lookup_statuses:1
msgid ""
"Returns full Tweet objects for up to 100 Tweets per request, specified by"
" the ``id`` parameter."
msgstr ""
"``id`` 값으로 지정한 최대 100개의 트윗에 대한 전체 트윗 개체를 반환합니다."

#: of tweepy.api.API.lookup_statuses:4
msgid "A list of Tweet IDs to lookup, up to 100"
msgstr "검색할 트윗 ID의 리스트 (최대 100개까지 가능)"

#: of tweepy.api.API.lookup_statuses:7
msgid ""
"A boolean indicating whether or not to include Tweets that cannot be "
"shown. Defaults to False."
msgstr ""
"전체 유저 객체 대신 user_id를 제공할지를 지정하는 boolean 값입니다. 기본값은 False."

#: of tweepy.api.API.get_status:10 tweepy.api.API.lookup_statuses:9
msgid "|include_ext_alt_text|"
msgstr ""
"첨부된 미디어 엔티티에 대체 텍스트(Alt text)가 존재하는 경우, "
"이 매개변수를 이용하면 미디어 엔티티 최상위 키에 ext_alt_text값을 반환할지를 지정하는 boolean 값입니다. "
"값이 따로 설정되지 않은 경우 트위터 API에서의 기본 반환값은 ``null`` 입니다. "

#: of tweepy.api.API.get_status:11 tweepy.api.API.lookup_statuses:10
msgid "|include_card_uri|"
msgstr ""
"트윗에 광고 카드나 card_uri를 이용한 카드가 부착되어 있는 경우, "
"검색된 트윗에 cart_uri가 포함되어야 하는지를 지정하는 boolean 값입니다."

#: of tweepy.api.API.lookup_statuses:17
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/get-statuses-lookup"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/get-statuses-lookup"

#: of tweepy.api.API.get_oembed:1
msgid ""
"Returns a single Tweet, specified by either a Tweet web URL or the Tweet "
"ID, in an oEmbed-compatible format. The returned HTML snippet will be "
"automatically recognized as an Embedded Tweet when Twitter's widget "
"JavaScript is included on the page."
msgstr "웹 주소(URL)나 ID로 지정한 단일 트윗을 oEmbed 호환 형식으로 반환합니다. "
"반환된 HTML 스니펫은, 트위터 위젯 자바스크립트가 페이지에 포함되어 있을 시 "
"임베디드 트윗으로 자동 인식됩니다."

#: of tweepy.api.API.get_oembed:6
msgid ""
"The oEmbed endpoint allows customization of the final appearance of an "
"Embedded Tweet by setting the corresponding properties in HTML markup to "
"be interpreted by Twitter's JavaScript bundled with the HTML response by "
"default. The format of the returned markup may change over time as "
"Twitter adds new features or adjusts its Tweet representation."
msgstr ""
"oEmbed 엔드포인트는, HTML 마크업의 관련 속성을, "
"HTML 응답과 함께 번들로 제공되는 트위터의 자바스크립트에 의해 해석되도록 설정하여, "
"임베디드 트윗의 최종 모습을 사용자 지정할 수 있도록 해 줍니다. "
"트위터가 새로운 기능을 추가하거나, 트윗의 표현 방식을 조정함에 따라 "
"반환되는 마크업 형식도 변경될 수 있습니다."

#: of tweepy.api.API.get_oembed:12
msgid ""
"The Tweet fallback markup is meant to be cached on your servers for up to"
" the suggested cache lifetime specified in the ``cache_age``."
msgstr ""
"트윗의 Fallback 마크업은 ``cache_age`` 에 지정된 권장 수명동안만 "
"서버에 캐시되도록 되어 있습니다."

#: of tweepy.api.API.get_oembed:15
msgid "The URL of the Tweet to be embedded"
msgstr "임베드할 트윗의 URL"

#: of tweepy.api.API.get_oembed:16
msgid ""
"The maximum width of a rendered Tweet in whole pixels. A supplied value "
"under or over the allowed range will be returned as the minimum or "
"maximum supported width respectively; the reset width value will be "
"reflected in the returned ``width`` property. Note that Twitter does not "
"support the oEmbed ``maxheight`` parameter. Tweets are fundamentally "
"text, and are therefore of unpredictable height that cannot be scaled "
"like an image or video. Relatedly, the oEmbed response will not provide a"
" value for ``height``. Implementations that need consistent heights for "
"Tweets should refer to the ``hide_thread`` and ``hide_media`` parameters "
"below."
msgstr ""
"렌더링될 트윗의 최대 너비(픽셀)이며, 허용 범위는 220px에서 550px입니다. "
"허용 범위보다 작거나 큰 값을 입력하면 각각 허용 범위의 최소 및 최대 너비로 설정되며, "
"``width`` 속성을 이용해 너비를 설정해도 이 반환값에 반영됩니다. "
"단, 트위터가 oEmbed의 ``maxheight`` 매개변수를 지원하지 않는다는 점은 유의하시기 바랍니다. "
"트윗은 기본적으로 텍스트이기에, 이미지나 영상처럼 높이를 예측할 수 없습니다. "
"이와 관련하여, oEmbed 응답은 ``height`` 값을 제공하지 않습니다."
"각 트윗별로 일관된 높이를 지정해야 할 경우, "
"아래의 ``hide_thread`` 및 ``hide_media`` 매개변수를 참조하시기 바랍니다."

#: of tweepy.api.API.get_oembed:26
msgid ""
"When set to ``true``, ``\"t\"``, or ``1``, links in a Tweet are not "
"expanded to photo, video, or link previews."
msgstr ""
"``true``, ``\"t\"`` 또는 ``1`` 로 설정된 경우, "
"트윗이 이미지, 사진, 링크 등의 미리보기를 제공하지 않습니다."

#: of tweepy.api.API.get_oembed:28
msgid ""
"When set to ``true``, ``\"t\"``, or ``1``, a collapsed version of the "
"previous Tweet in a conversation thread will not be displayed when the "
"requested Tweet is in reply to another Tweet."
msgstr ""
"``true``, ``\"t\"`` 또는 ``1`` 로 설정된 경우, "
"트윗의 스레드(타래) 기준 이전 트윗들이 보이지 않습니다."

#: of tweepy.api.API.get_oembed:31
msgid ""
"When set to ``true``, ``\"t\"``, or ``1``, the ``<script>`` responsible "
"for loading ``widgets.js`` will not be returned. Your webpages should "
"include their own reference to ``widgets.js`` for use across all Twitter "
"widgets including Embedded Tweets."
msgstr ""
"``true``, ``\"t\"`` 또는 ``1`` 로 설정된 경우, "
"``widget.js`` 로드를 담당하는 ``<script>`` 가 반환되지 않습니다. "
"이를 사용하는 웹페이지에는 모든 트위터 위젯에서 사용할 "
"``widget.js`` 에 대한 자체 참조를 포함해야만 합니다."

#: of tweepy.api.API.get_oembed:35
msgid ""
"Specifies whether the embedded Tweet should be floated left, right, or "
"center in the page relative to the parent element."
msgstr ""
"임베드된 트윗을 부모 요소 기준, 페이지의 왼쪽, 오른쪽 또는 가운데 중 어디에 띄울지를 지정합니다. "
"``left``, ``right``, ``center``, ``none`` 중 하나의 값만 사용할 수 있습니다."

#: of tweepy.api.API.get_oembed:37
msgid ""
"A comma-separated list of Twitter usernames related to your content. This"
" value will be forwarded to Tweet action intents if a viewer chooses to "
"reply, like, or retweet the embedded Tweet."
msgstr ""
"쉼표(,)로 구분되어 있는, 특정 컨텐츠와 관련 있는 트위터 사용자명(username)의 목록입니다."
"이 값은 뷰어가 포함된 트윗에 답글을 달거나, 리트윗 또는 '마음에 들어요'를 하도록 선택한 경우 "
"트윗 액션으로 전달합니다."

#: of tweepy.api.API.get_oembed:40
msgid ""
"Request returned HTML and a rendered Tweet in the specified Twitter "
"language supported by embedded Tweets."
msgstr ""
"반환할 HTML과 렌더링된 트윗을, "
"임베디드 트윗에 의해 지원되는 특정 트위터 언어로 반환해줄 것을 요청합니다."

#: of tweepy.api.API.get_oembed:42
msgid ""
"When set to ``dark``, the Tweet is displayed with light text over a dark "
"background."
msgstr ""
"``dark`` 로 설정하면, 트윗이 어두운 배경에 밝은색 텍스트의 꼴로 표시됩니다."

#: of tweepy.api.API.get_oembed:44
msgid "Adjust the color of Tweet text links with a hexadecimal color value."
msgstr ""
"트윗의 링크 색상을 조정합니다. 색상 값은 16진수로 입력합니다."

#: of tweepy.api.API.get_oembed:46
msgid "Set to ``video`` to return a Twitter Video embed for the given Tweet."
msgstr "트위터 비디오 임베드를 반환받으려면 ``video`` 로 설정합니다."

#: of tweepy.api.API.get_oembed:48
msgid ""
"When set to ``true``, the Tweet and its embedded page on your site are "
"not used for purposes that include personalized suggestions and "
"personalized ads."
msgstr ""
"``true`` 로 설정하면, 임베드된 사이트와 트윗이 맞춤 컨텐츠 및 광고에 사용되지 않습니다."

#: of tweepy.api.API.available_trends:7 tweepy.api.API.closest_trends:19
#: tweepy.api.API.get_oembed:52 tweepy.api.API.get_place_trends:21
#: tweepy.api.API.get_profile_banner:11 tweepy.api.API.get_settings:4
#: tweepy.api.API.rate_limit_status:8 tweepy.api.API.set_settings:22
#: tweepy.api.API.supported_languages:8
msgid "JSON"
msgstr "JSON"

#: of tweepy.api.API.available_trends:8 tweepy.api.API.closest_trends:20
#: tweepy.api.API.get_oembed:53 tweepy.api.API.get_place_trends:22
#: tweepy.api.API.get_profile_banner:12 tweepy.api.API.get_settings:5
#: tweepy.api.API.rate_limit_status:9 tweepy.api.API.set_settings:23
#: tweepy.api.API.supported_languages:9
msgid ":class:`dict`"
msgstr ":class:`dict`"

#: of tweepy.api.API.get_oembed:57
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/get-statuses-oembed"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/get-statuses-oembed"

#: of tweepy.api.API.get_retweeter_ids:1
msgid ""
"Returns up to 100 user IDs belonging to users who have retweeted the "
"Tweet specified by the ``id`` parameter."
msgstr ""
"ID로 지정한 트윗을 리트윗한 사용자를 최대 100명까지 반환합니다."

#: of tweepy.api.API.create_favorite:4 tweepy.api.API.destroy_favorite:4
#: tweepy.api.API.destroy_status:4 tweepy.api.API.get_retweeter_ids:4
#: tweepy.api.API.get_retweets:3 tweepy.api.API.get_status:3
#: tweepy.api.API.retweet:3 tweepy.api.API.unretweet:4
msgid "|sid|"
msgstr "특정 트윗(status)의 ID."

#: of tweepy.api.API.get_blocked_ids:5 tweepy.api.API.get_blocks:6
#: tweepy.api.API.get_direct_messages:5 tweepy.api.API.get_follower_ids:6
#: tweepy.api.API.get_followers:7 tweepy.api.API.get_friend_ids:6
#: tweepy.api.API.get_friends:6 tweepy.api.API.get_list_members:8
#: tweepy.api.API.get_list_memberships:8 tweepy.api.API.get_list_ownerships:9
#: tweepy.api.API.get_list_subscribers:9
#: tweepy.api.API.get_list_subscriptions:7 tweepy.api.API.get_muted_ids:4
#: tweepy.api.API.get_mutes:3 tweepy.api.API.get_retweeter_ids:6
#: tweepy.api.API.incoming_friendships:4 tweepy.api.API.outgoing_friendships:4
msgid "|cursor|"
msgstr ""
"결과를 페이지로 나누며, 페이징을 시작하려면 -1 값을 입력합니다. "
"응답 내용의 next_cursor와 previous_cursor 속성의 반환값을 입력해, "
"목록의 페이지를 앞뒤로 옮길 수 있습니다."

#: of tweepy.api.API.get_blocked_ids:4 tweepy.api.API.get_follower_ids:7
#: tweepy.api.API.get_friend_ids:7 tweepy.api.API.get_muted_ids:3
#: tweepy.api.API.get_retweeter_ids:7 tweepy.api.API.incoming_friendships:5
#: tweepy.api.API.no_retweets_friendships:4
#: tweepy.api.API.outgoing_friendships:5
msgid "|stringify_ids|"
msgstr "ID를 문자열로 반환하도록 설정."

#: of tweepy.api.API.get_blocked_ids:8 tweepy.api.API.get_follower_ids:11
#: tweepy.api.API.get_friend_ids:11 tweepy.api.API.get_muted_ids:7
#: tweepy.api.API.get_retweeter_ids:10 tweepy.api.API.incoming_friendships:8
#: tweepy.api.API.no_retweets_friendships:7
#: tweepy.api.API.outgoing_friendships:8
msgid ":py:class:`List`\\[:class:`int`]"
msgstr ":py:class:`List`\\[:class:`int`]"

#: of tweepy.api.API.get_retweeter_ids:14
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/get-statuses-retweeters-ids"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/get-statuses-retweeters-ids"

#: of tweepy.api.API.get_retweets:1
msgid "Returns up to 100 of the first Retweets of the given Tweet."
msgstr "지정한 트윗을 리트윗한 사용자를 최근 순으로 100명까지 반환합니다."

#: of tweepy.api.API.get_retweets:12
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/get-statuses-retweets-id"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/get-statuses-retweets-id"

#: of tweepy.api.API.get_retweets_of_me:1
msgid ""
"Returns the 20 most recent Tweets of the authenticated user that have "
"been retweeted by others."
msgstr ""
"다른 사용자에 의해 리트윗된, 인증된 사용자의 최근 트윗 20개를 반환합니다."

#: of tweepy.api.API.get_followers:10 tweepy.api.API.get_friends:9
#: tweepy.api.API.get_retweets_of_me:9
msgid "|include_user_entities|"
msgstr "False로 설정하면 사용자 객체 노드를 포함하지 않음. 기본값은 True."

#: of tweepy.api.API.get_retweets_of_me:16
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/get-statuses-retweets_of_me"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/get-statuses-retweets_of_me"

#: of tweepy.api.API.get_status:1
msgid "Returns a single status specified by the ID parameter."
msgstr "ID로 지정한 특정 트윗(status)을 반환합니다."

#: of tweepy.api.API.get_status:5
msgid ""
"A boolean indicating if any Tweets returned that have been retweeted by "
"the authenticating user should include an additional current_user_retweet"
" node, containing the ID of the source status for the retweet."
msgstr ""
"지정한 트윗이 현재 인증된 사용자가 리트윗한 트윗일 경우, "
"원본 트윗의 ID를 포함하고 있는 current_user_retweet 노드를 포함해야 하는지의 "
"여부를 나타내는 boolean 값입니다."

#: of tweepy.api.API.create_favorite:8 tweepy.api.API.destroy_favorite:8
#: tweepy.api.API.destroy_status:8 tweepy.api.API.get_status:14
#: tweepy.api.API.retweet:7 tweepy.api.API.unretweet:8
#: tweepy.api.API.update_status:61 tweepy.api.API.update_status_with_media:21
msgid ":class:`~tweepy.models.Status`"
msgstr ":class:`~tweepy.models.Status`"

#: of tweepy.api.API.get_status:18
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/get-statuses-show-id"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/get-statuses-show-id"

#: of tweepy.api.API.create_favorite:1
msgid ""
"Favorites the status specified in the ``id`` parameter as the "
"authenticating user."
msgstr ""
"지정한 트윗(status)에, 현재 인증된 사용자로서 '마음에 들어요'를 표시합니다."

#: of tweepy.api.API.create_favorite:12
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/post-favorites-create"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/post-favorites-create"

#: of tweepy.api.API.destroy_favorite:1
msgid ""
"Un-favorites the status specified in the ``id`` parameter as the "
"authenticating user."
msgstr ""
"지정한 트윗(status)에, 현재 인증된 사용자로서의 '마음에 들어요'를 취소합니다."

#: of tweepy.api.API.destroy_favorite:12
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/post-favorites-destroy"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/post-favorites-destroy"

#: of tweepy.api.API.destroy_status:1
msgid ""
"Destroy the status specified by the ``id`` parameter. The authenticated "
"user must be the author of the status to destroy."
msgstr ""
"ID로 지정한 트윗(status)을 삭제합니다. "
"현재 인증된 사용자가 삭제할 트윗(status)의 작성자여야 합니다."

#: of tweepy.api.API.destroy_status:12
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/post-statuses-destroy-id"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/post-statuses-destroy-id"

#: of tweepy.api.API.retweet:1
msgid "Retweets a Tweet. Requires the ID of the Tweet you are retweeting."
msgstr "지정한 트윗을 리트윗합니다. 리트윗할 트윗의 ID가 필요합니다."

#: of tweepy.api.API.retweet:11
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/post-statuses-retweet-id"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/post-statuses-retweet-id"

#: of tweepy.api.API.unretweet:1
msgid "Untweets a retweeted status. Requires the ID of the retweet to unretweet."
msgstr "지정한 트윗을 리트윗 취소합니다. 리트윗을 취소할 트윗의 ID가 필요합니다."

#: of tweepy.api.API.unretweet:12
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/post-statuses-unretweet-id"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/post-statuses-unretweet-id"

#: of tweepy.api.API.update_status:1
msgid "Updates the authenticating user's current status, also known as Tweeting."
msgstr "현재 인증된 사용자의 status를 갱신합니다(=트윗을 작성합니다)."

#: of tweepy.api.API.update_status:4
msgid ""
"For each update attempt, the update text is compared with the "
"authenticating user's recent Tweets. Any attempt that would result in "
"duplication will be blocked, resulting in a 403 error. A user cannot "
"submit the same status twice in a row."
msgstr ""
"각 트윗 작성 시도마다, 본문을 현재 인증된 사용자의 최근 트윗과 비교합니다. "
"중복된 본문 작성은 불가능하며, 이는 HTTP 403 오류를 반환합니다. "
"다시 말해, 같은 트윗을 연속으로 작성할 수 없습니다."

#: of tweepy.api.API.update_status:9
msgid ""
"While not rate limited by the API, a user is limited in the number of "
"Tweets they can create at a time. If the number of updates posted by the "
"user reaches the current allowed limit this method will return an HTTP "
"403 error."
msgstr ""
"더불어 API 제한에 걸리지 않았더라도, 사용자는 한 번에 게시할 수 있는 트윗 수에 제한이 있습니다. "
"사용자가 게시한 트윗이 특정 제한에 도달해도 이 메서드는 HTTP 403 오류를 반환합니다."

#: of tweepy.api.API.update_status:14 tweepy.api.API.update_status_with_media:7
msgid "The text of your status update."
msgstr "작성할 트윗(status)의 본문."

#: of tweepy.api.API.update_status:15
msgid ""
"The ID of an existing status that the update is in reply to. Note: This "
"parameter will be ignored unless the author of the Tweet this parameter "
"references is mentioned within the status text. Therefore, you must "
"include @username, where username is the author of the referenced Tweet, "
"within the update."
msgstr ""
"(답글을 작성하는 경우) 답글을 달 원본 트윗의 ID. "
"참고: 이 매개변수가 참조하는 트윗 작성자를 트윗(status) 본문에 언급하지 않는 한, "
"이 매개변수는 무시됩니다. 따라서, 본문에 @username를 포함해야 하며, "
"여기서 username은 답글을 달 원본 트윗의 작성자의 것으로 입력합니다."

#: of tweepy.api.API.update_status:20
msgid ""
"If set to true and used with in_reply_to_status_id, leading @mentions "
"will be looked up from the original Tweet, and added to the new Tweet "
"from there. This wil append @mentions into the metadata of an extended "
"Tweet as a reply chain grows, until the limit on @mentions is reached. In"
" cases where the original Tweet has been deleted, the reply will fail."
msgstr ""
"true로 설정하고 in_reply_to_status_id와 함께 사용하면, "
"원본 트윗에서의 기존 @mention들을 검색하고 이를 새 트윗에 추가합니다. "
"이렇게 하면 답글 타래(reply chain)가 길어질 때, @mention의 제한에 도달할 때까지 "
"확장 트윗의 메타데이터에 @mention을 추가합니다."
"이때, 원본 트윗이 삭제된 경우 답글 작성은 실패합니다."

#: of tweepy.api.API.update_status:26
msgid ""
"When used with auto_populate_reply_metadata, a comma-separated list of "
"user ids which will be removed from the server-generated @mentions prefix"
" on an extended Tweet. Note that the leading @mention cannot be removed "
"as it would break the in-reply-to-status-id semantics. Attempting to "
"remove it will be silently ignored."
msgstr ""
"auto_populate_reply_metadata와 함께 사용할 경우, "
"확장 트윗 앞부분의 서버 생성 @mention 목록에서, "
"쉼표(,)로 구분되고 ID로 지정된, 사용자(들)을 제거합니다."
"단, 원본 트윗 작성자에 대한 @mention을 제거하는 것은, "
"in_reply_to_status_id의 의미와 충돌하기 떄문에 불가능합니다. "
"이 @mention을 제거하려는 시도는 자동적으로 무시됩니다."

#: of tweepy.api.API.update_status:32
msgid ""
"In order for a URL to not be counted in the status body of an extended "
"Tweet, provide a URL as a Tweet attachment. This URL must be a Tweet "
"permalink, or Direct Message deep link. Arbitrary, non-Twitter URLs must "
"remain in the status text. URLs passed to the attachment_url parameter "
"not matching either a Tweet permalink or Direct Message deep link will "
"fail at Tweet creation and cause an exception."
msgstr ""
"트윗(status)의 본문 제한에 URL이 계산되지 않도록, 트윗에 첨부하는 형식으로 URL을 포함합니다. "
"단, 이 URL은 트윗의 permalink 또는 쪽지(DM)의 딥 링크(deep link)여야 합니다. "
"이에 해당되지 않는 URL은 트윗 본문에 있어야 합니다. "
"만약 이를 attachment_url에 할당하려 시도하면 트윗 생성에 실패하며, 예외가 발생합니다."

#: of tweepy.api.API.update_status:39
msgid ""
"A list of media_ids to associate with the Tweet. You may include up to 4 "
"photos or 1 animated GIF or 1 video in a Tweet."
msgstr ""
"트윗에 연결할 media_id의 목록입니다. 한 개의 트윗은 최대 4장의 이미지, "
"1장의 움직이느 GIF 및 1개의 영상을 포함할 수 있습니다."

#: of tweepy.api.API.update_status:41
msgid ""
"If you upload Tweet media that might be considered sensitive content such"
" as nudity, or medical procedures, you must set this value to true."
msgstr ""
"노출 및 의료 시술과 같은 민감한 컨텐츠로 간주될 수 있는 미디어를 트윗에 업로드할 경우, "
"이 값을 반드시 true로 설정해야 합니다."

#: of tweepy.api.API.update_status:44
msgid ""
"The latitude of the location this Tweet refers to. This parameter will be"
" ignored unless it is inside the range -90.0 to +90.0 (North is positive)"
" inclusive. It will also be ignored if there is no corresponding long "
"parameter."
msgstr ""
"이 트윗이 가리킬 위치의 위도. -90.0 ~ +90.0 (북반구가 양수값) 범위 밖의 "
"값은 무시되며, 아래의 ``long`` 매개변수가 지정되지 않은 경우에도 무시됩니다."

#: of tweepy.api.API.update_status:48
msgid ""
"The longitude of the location this Tweet refers to. The valid ranges for "
"longitude are -180.0 to +180.0 (East is positive) inclusive. This "
"parameter will be ignored if outside that range, if it is not a number, "
"if geo_enabled is disabled, or if there no corresponding lat parameter."
msgstr ""
"이 트윗이 가리킬 위치의 경도. -180.0 ~ +180.0 (동쪽이 양수값) 범위 밖의 "
"값, 숫자 이외의 값이 입력될 경우 무시되며, ``geo_enabled`` 가 비활성화 되었거나, "
"위의 ``lat`` 매개변수가 지정되지 않은 경우나, geo_enabled가 비활성화된 에도 "
"전달된 값이 무시됩니다."

#: of tweepy.api.API.update_status:53
msgid "A place in the world."
msgstr "(사용자가 위치 정보를 사용할 수 있는 경우) 트윗이 작성된 위치의 ID."

#: of tweepy.api.API.update_status:54
#: tweepy.api.API.update_status_with_media:17
msgid ""
"Whether or not to put a pin on the exact coordinates a Tweet has been "
"sent from."
msgstr ""
"트윗이 작성되어 전송된 위치를 표시할지의 여부."

#: of tweepy.api.API.update_status:57
msgid ""
"Associate an ads card with the Tweet using the card_uri value from any "
"ads card response."
msgstr ""
"트윗에 ``card_uri`` 속성을 이용하여 광고 카드를 추가합니다."

#: of tweepy.api.API.update_status:65
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/post-statuses-update"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/post-statuses-update"

#: of tweepy.api.API.update_status_with_media:1
msgid "Use :func:`API.media_upload` instead."
msgstr "대신 :func:`API.media_upload` 를 이용하세요."

#: of tweepy.api.API.update_status_with_media:4
msgid ""
"Update the authenticated user's status. Statuses that are duplicates or "
"too long will be silently ignored."
msgstr ""
"현재 인증된 사용자의 Status를 미디어와 함께 업데이트합니다. "
"중복된 Status 작성 시도 또는 너무 긴 트윗의 작성 시도는 별다른 경고 없이 무시될 것입니다."

#: of tweepy.api.API.chunked_upload:7 tweepy.api.API.media_upload:7
#: tweepy.api.API.simple_upload:4 tweepy.api.API.update_profile_banner:3
#: tweepy.api.API.update_profile_image:4
#: tweepy.api.API.update_status_with_media:8
msgid "|filename|"
msgstr "업로드할 이미지의 이름. ``file`` 을 따로 지정하지 않으면 이 파일이 자동으로 열립니다."

#: of tweepy.api.API.chunked_upload:8 tweepy.api.API.media_upload:8
#: tweepy.api.API.simple_upload:5 tweepy.api.API.update_profile_banner:4
#: tweepy.api.API.update_profile_image:5
#: tweepy.api.API.update_status_with_media:9
msgid "|file|"
msgstr ""
"파일 객체로, ``filename`` 를 직접 여는 것 대신 사용됩니다. "
"물론 MIME 타입 감지 및 POST 데이터 형식의 필드로 ``filename`` 가 필요하기는 합니다."

#: of tweepy.api.API.update_status_with_media:10
msgid "Set to true for content which may not be suitable for every audience."
msgstr "민감한 컨텐츠일 경우 true로 설정합니다."

#: of tweepy.api.API.update_status_with_media:12
msgid "The ID of an existing status that the update is in reply to."
msgstr "답글을 작성할 대상 트윗(status)의 ID."

#: of tweepy.api.API.update_status_with_media:13
msgid "The location's latitude that this tweet refers to."
msgstr "이 트윗이 가리킬 위치의 위도."

#: of tweepy.api.API.update_status_with_media:14
msgid "The location's longitude that this tweet refers to."
msgstr "이 트윗이 가리킬 위치의 경도."

#: of tweepy.api.API.update_status_with_media:15
msgid ""
"Twitter ID of location which is listed in the Tweet if geolocation is "
"enabled for the user."
msgstr ""
"(사용자가 위치 정보를 사용할 수 있는 경우) "
"트윗이 작성된 위치의 정보 (ID)."

#: of tweepy.api.API.update_status_with_media:25
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/post-statuses-update_with_media"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/post-and-"
"engage/api-reference/post-statuses-update_with_media"

#: ../../api.rst:416
msgid "Search Tweets"
msgstr "트윗 검색"

#: of tweepy.api.API.search_tweets:1
msgid "Returns a collection of relevant Tweets matching a specified query."
msgstr "특정 쿼리에 일치하는 트윗 컬렉션을 반환합니다."

#: of tweepy.api.API.search_tweets:3
msgid ""
"Please note that Twitter's search service and, by extension, the Search "
"API is not meant to be an exhaustive source of Tweets. Not all Tweets "
"will be indexed or made available via the search interface."
msgstr ""
"트위터의 검색 서비스 및 검색 API가 모든 트윗을 대상으로 검색 작업을 수행하는 것은 아니라는 것을 "
"유의하세요. 모든 트윗이 검색 인터페이스를 통해 색인화 되어있거나 검색할 수 있게 만들어져 있지는 "
"않습니다."

#: of tweepy.api.API.search_tweets:9
msgid ""
"In API v1.1, the response format of the Search API has been improved to "
"return Tweet objects more similar to the objects you’ll find across the "
"REST API and platform. However, perspectival attributes (fields that "
"pertain to the perspective of the authenticating user) are not currently "
"supported on this endpoint. [#]_\\ [#]_"
msgstr ""
"API v1.1에서는, 검색 API의 응답 형식이 REST API나 플랫폼을 통해서 볼 수 있는 객체와 더 비슷한 "
"트윗 객체를 반환하도록 향상되었습니다. 하지만, perspectival 속성(인증된 사용자에 의존하는 필드)은 "
"현재 지원하지 않습니다. [#]_\\ [#]_"

#: of tweepy.api.API.search_tweets:16
msgid ""
"The search query string of 500 characters maximum, including operators. "
"Queries may additionally be limited by complexity."
msgstr ""
"연산자를 포함하여 최대 500자의 검색하고자 하는 문자열 쿼리. "
"쿼리는 추가적으로 복잡도에 따라 제한될 수 있습니다."

#: of tweepy.api.API.search_tweets:18
msgid ""
"Returns tweets by users located within a given radius of the given "
"latitude/longitude.  The location is preferentially taking from the "
"Geotagging API, but will fall back to their Twitter profile. The "
"parameter value is specified by \"latitude,longitude,radius\", where "
"radius units must be specified as either \"mi\" (miles) or \"km\" "
"(kilometers). Note that you cannot use the near operator via the API to "
"geocode arbitrary locations; however you can use this geocode parameter "
"to search near geocodes directly. A maximum of 1,000 distinct \"sub-"
"regions\" will be considered when using the radius modifier."
msgstr ""
"주어진 위도, 경도의 주어진 반경 내에 위치한 사용자의 트윗만 반환합니다. 위치는 "
"우선적으로 위치 정보 삽입 API에서 받아오지만, 트위터 프로필 내의 정보로 대체할 수 있습니다. "
"매개변수의 값은 \"위도, 경도, 반경\"의 형태로 지정되며, 반경은 \"mi\"(마일) 또는 \"km\"(킬로미터) "
"단위로 주어져야 합니다. API를 통해 근거리 연산자를 사용하여 임의의 위치를 geocode로 입력할 "
"수는 없다는 점을 유의해주세요. 다만 이 geocode 매개변수를 통해 근처의 지오코드를 검색할 수는 "
"있습니다. 반경 수식어를 사용할 경우에는 최대 1,000개의 분명하게 구분되는 \"하위 영역\"을 고려할 "
"할 것입니다."

#: of tweepy.api.API.search_tweets:28
msgid ""
"Restricts tweets to the given language, given by an ISO 639-1 code. "
"Language detection is best-effort."
msgstr ""
"트윗을 ISO 639-1 코드로 주어진 언어로 제한합니다. "
"언어 감지가 적절하게 작동했다고 전제합니다."

#: of tweepy.api.API.search_tweets:30
msgid ""
"Specify the language of the query you are sending (only ja is currently "
"effective). This is intended for language-specific consumers and the "
"default should work in the majority of cases."
msgstr ""
"전송한 쿼리의 언어를 명시합니다. (현재는 ja만 유효합니다.) "
"이는 언어별 사용자를 위한 것이며 대부분의 경우엔 기본값이 적용됩니다."

#: of tweepy.api.API.search_tweets:33
msgid ""
"Specifies what type of search results you would prefer to receive. The "
"current default is \"mixed.\" Valid values include:  * mixed : include "
"both popular and real time results in the                       response "
"* recent : return only the most recent results in the response * popular "
": return only the most popular results in the response"
msgstr ""

#: of tweepy.api.API.search_tweets:33
msgid ""
"Specifies what type of search results you would prefer to receive. The "
"current default is \"mixed.\" Valid values include:"
msgstr ""
"얻고 싶은 검색 결과의 형식에 대해 명시합니다. 기본값은 \"mixed\"."
"유효한 값은 다음과 같습니다: "

#: of tweepy.api.API.search_tweets:36
msgid ""
"mixed : include both popular and real time results in the"
"                       response"
msgstr "\"mixed\": 응답에 인기 결과와 실시간 결과 모두를 포함합니다."

#: of tweepy.api.API.search_tweets:37
msgid "recent : return only the most recent results in the response"
msgstr "\"recent\": 응답으로 가장 최근의 결과만을 반환합니다."

#: of tweepy.api.API.search_tweets:38
msgid "popular : return only the most popular results in the response"
msgstr "\"popular\": 응답으로 가장 인기 있는 결과만을 반환합니다."

#: of tweepy.api.API.search_tweets:40
msgid ""
"Returns tweets created before the given date. Date should be formatted as"
" YYYY-MM-DD. Keep in mind that the search index has a 7-day limit. In "
"other words, no tweets will be found for a date older than one week."
msgstr ""
"주어진 날짜 이전에 작성된 트윗을 반환합니다. "
"날짜는 YYYY-MM-DD의 형식으로 주어져야 합니다. "
"검색 색인은 7일 간만 유지됩니다. "
"다시 말해, 작성된 지 일주일 이상 지난 트윗은 찾을 수 없습니다."

#: of tweepy.api.API.search_tweets:44
msgid ""
"|since_id| There are limits to the number of Tweets which can be accessed"
" through the API. If the limit of Tweets has occurred since the since_id,"
" the since_id will be forced to the oldest ID available."
msgstr ""
"|since_id| API를 통해서 접근할 수 있는 트윗의 수에는 제한이 있습니다. ``since_id`` 값으로 인해 "
"트윗 수 제한을 초과하게 된다면, ``since_id`` 는 제한을 초과하지 않는 가장 오래된 ID로 강제 재설정됩니다."

#: of tweepy.api.API.search_tweets:52
msgid ":class:`SearchResults`"
msgstr ":class:`SearchResults`"

#: of tweepy.api.API.search_tweets:56
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/search/api-"
"reference/get-search-tweets"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/tweets/search/api-"
"reference/get-search-tweets"

#: ../../api.rst:421
msgid "Accounts and users"
msgstr "계정 및 사용자"

#: ../../api.rst:424
msgid "Create and manage lists"
msgstr "리스트 생성 및 관리"

#: of tweepy.api.API.get_lists:1
msgid ""
"Returns all lists the authenticating or specified user subscribes to, "
"including their own. The user is specified using the ``user_id`` or "
"``screen_name`` parameters. If no user is given, the authenticating user "
"is used."
msgstr ""
"현재 인증된 사용자 또는 지정한 사용자가 구독 중인 리스트와, "
"소유하고 있는 리스트를 반환합니다. "
"``user_id`` 나 ``screen_name``  매개변수를 사용하여 사용자를 지정해야 하며, "
"지정하지 않을 경우, 현재 인증된 사용자를 기준으로 합니다."

#: of tweepy.api.API.get_lists:6
msgid ""
"A maximum of 100 results will be returned by this call. Subscribed lists "
"are returned first, followed by owned lists. This means that if a user "
"subscribes to 90 lists and owns 20 lists, this method returns 90 "
"subscriptions and 10 owned lists. The ``reverse`` method returns owned "
"lists first, so with ``reverse=true``, 20 owned lists and 80 "
"subscriptions would be returned."
msgstr ""
"이 메서드는 최대 100개의 결과를 반환하며, "
"구독 중인 리스트가 먼저 반환되고, 이후에 소유 중인 리스트가 반환됩니다. "
"따라서 만약 사용자가 90개의 리스트를 팔로우하고 있고, 20개의 리스트를 소유하고 있다면 "
"메서드는 90개의 팔로우 중인 리스트와, 10개의 소유 중인 리스트를 반환할 것입니다."
"단, ``reverse`` 값이 True로 설정된 경우에는(``reverse=true``) "
"소유 중인 리스트를 먼저 반환하므로, 20개의 소유 중인 리스트와 "
"80개의 구독 중인 리스트가 반환될 것입니다."

#: of tweepy.api.API.get_lists:15
msgid ""
"A boolean indicating if you would like owned lists to be returned first. "
"See description above for information on how this parameter works."
msgstr ""
"소유 중인 리스트를 먼저 반환받을지의 여부. 기본값은 False."
"이 매개변수에 관한 설명은 위를 참고하면 됩니다."

#: of tweepy.api.API.get_list_memberships:14
#: tweepy.api.API.get_list_ownerships:12
#: tweepy.api.API.get_list_subscriptions:10 tweepy.api.API.get_lists:20
msgid ":py:class:`List`\\[:class:`~tweepy.models.List`]"
msgstr ":py:class:`List`\\[:class:`~tweepy.models.List`]"

#: of tweepy.api.API.get_lists:24
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-list"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-list"

#: of tweepy.api.API.get_list_members:1
msgid "Returns the members of the specified list."
msgstr "지정한 사용자가 추가되어 있는 리스트를 반환합니다. "

#: of tweepy.api.API.add_list_member:4 tweepy.api.API.add_list_members:5
#: tweepy.api.API.destroy_list:6 tweepy.api.API.get_list:4
#: tweepy.api.API.get_list_member:3 tweepy.api.API.get_list_members:3
#: tweepy.api.API.get_list_subscriber:5 tweepy.api.API.get_list_subscribers:4
#: tweepy.api.API.list_timeline:5 tweepy.api.API.remove_list_member:4
#: tweepy.api.API.remove_list_members:5 tweepy.api.API.subscribe_list:5
#: tweepy.api.API.unsubscribe_list:3 tweepy.api.API.update_list:4
msgid "|list_id|"
msgstr "리스트의 ID. (숫자형)"

#: of tweepy.api.API.add_list_member:5 tweepy.api.API.add_list_members:6
#: tweepy.api.API.destroy_list:7 tweepy.api.API.get_list:5
#: tweepy.api.API.get_list_member:4 tweepy.api.API.get_list_members:4
#: tweepy.api.API.get_list_subscriber:6 tweepy.api.API.get_list_subscribers:5
#: tweepy.api.API.list_timeline:6 tweepy.api.API.remove_list_member:5
#: tweepy.api.API.remove_list_members:6 tweepy.api.API.subscribe_list:6
#: tweepy.api.API.unsubscribe_list:4 tweepy.api.API.update_list:5
msgid "|slug|"
msgstr ""
"숫자형 ID값 대신, 슬러그(slug)값으로 리스트를 식별할 수 있습니다. "
"이렇게 하려면, owner_id 또는 owner_screen_name 매개변수를 사용해 "
"목록 소유자를 지정해야만 합니다."

#: of tweepy.api.API.add_list_member:8 tweepy.api.API.add_list_members:11
#: tweepy.api.API.destroy_list:4 tweepy.api.API.get_list:6
#: tweepy.api.API.get_list_member:7 tweepy.api.API.get_list_members:5
#: tweepy.api.API.get_list_subscriber:3 tweepy.api.API.get_list_subscribers:6
#: tweepy.api.API.list_timeline:7 tweepy.api.API.remove_list_member:8
#: tweepy.api.API.remove_list_members:11 tweepy.api.API.subscribe_list:3
#: tweepy.api.API.unsubscribe_list:5 tweepy.api.API.update_list:9
msgid "|owner_screen_name|"
msgstr "슬러그(slug)값으로 지정한 리스트 소유자의 screen_name입니다."

#: of tweepy.api.API.add_list_member:9 tweepy.api.API.add_list_members:12
#: tweepy.api.API.destroy_list:5 tweepy.api.API.get_list:7
#: tweepy.api.API.get_list_member:8 tweepy.api.API.get_list_members:6
#: tweepy.api.API.get_list_subscriber:4 tweepy.api.API.get_list_subscribers:7
#: tweepy.api.API.list_timeline:8 tweepy.api.API.remove_list_member:9
#: tweepy.api.API.remove_list_members:12 tweepy.api.API.subscribe_list:4
#: tweepy.api.API.unsubscribe_list:6 tweepy.api.API.update_list:10
msgid "|owner_id|"
msgstr "슬러그(slug)값으로 지정한 리스트 소유자의 ID값입니다."

#: of tweepy.api.API.create_block:9 tweepy.api.API.destroy_block:7
#: tweepy.api.API.get_blocks:5 tweepy.api.API.get_followers:9
#: tweepy.api.API.get_friends:8 tweepy.api.API.get_list_member:10
#: tweepy.api.API.get_list_members:10 tweepy.api.API.get_list_subscriber:10
#: tweepy.api.API.get_list_subscribers:11 tweepy.api.API.get_mutes:5
#: tweepy.api.API.update_profile:15 tweepy.api.API.update_profile_image:7
#: tweepy.api.API.verify_credentials:4
msgid "|skip_status|"
msgstr "트윗(status)을 반환될 사용자 객체에 포함하지 않을지의 여부를 나타내는 boolean값입니다. "
"기본값은 False(사용자 객체에 포함함)."

#: of tweepy.api.API.get_blocks:9 tweepy.api.API.get_followers:13
#: tweepy.api.API.get_friends:12 tweepy.api.API.get_list_members:13
#: tweepy.api.API.get_list_subscribers:14 tweepy.api.API.get_mutes:8
#: tweepy.api.API.lookup_users:18 tweepy.api.API.search_users:12
msgid ":py:class:`List`\\[:class:`~tweepy.models.User`]"
msgstr ":py:class:`List`\\[:class:`~tweepy.models.User`]"

#: of tweepy.api.API.get_list_members:17
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-members"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-members"

#: of tweepy.api.API.get_list_member:1
msgid "Check if the specified user is a member of the specified list."
msgstr "지정한 사용자가 지정한 리스트의 구성원인지를 확인합니다."

#: of tweepy.api.API.get_list_member:12
msgid "The user is not a member of the list."
msgstr "사용자가 리스트의 구성원이 아닌 경우."

#: of tweepy.api.API.create_block:12 tweepy.api.API.create_friendship:9
#: tweepy.api.API.create_mute:8 tweepy.api.API.destroy_block:10
#: tweepy.api.API.destroy_friendship:7 tweepy.api.API.destroy_mute:8
#: tweepy.api.API.get_list_member:15 tweepy.api.API.get_list_subscriber:15
#: tweepy.api.API.get_user:8 tweepy.api.API.report_spam:9
#: tweepy.api.API.update_profile:18 tweepy.api.API.update_profile_image:10
#: tweepy.api.API.verify_credentials:11
msgid ":class:`~tweepy.models.User`"
msgstr ":class:`~tweepy.models.User`"

#: of tweepy.api.API.get_list_member:19
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-members-show"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-members-show"

#: of tweepy.api.API.get_list_memberships:1
msgid ""
"Returns the lists the specified user has been added to. If ``user_id`` or"
" ``screen_name`` are not provided, the memberships for the authenticating"
" user are returned."
msgstr ""
"지정한 사용자가 구성원으로 추가되어 있는 리스트를 반환합니다. "
"user_id나 screen_name값이 지정되지 않은 경우, 현재 인증된 사용자를 "
"기준으로 한 결과를 반환합니다."

#: of tweepy.api.API.get_list_memberships:9
msgid ""
"A boolean indicating whether to return just lists the authenticating user"
" owns, and the user represented by ``user_id`` or ``screen_name`` is a "
"member of."
msgstr ""
"현재 인증된 사용자가 소유 중인 리스트도 같이 반환할지의 여부. "
"``user_id`` 또는 ``screen_name`` 으로 특정 사용자를 지정했을 경우, "
"대상은 해당 사용자가 됩니다."

#: of tweepy.api.API.get_list_memberships:18
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-memberships"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-memberships"

#: of tweepy.api.API.get_list_ownerships:1
msgid ""
"Returns the lists owned by the specified user. Private lists will only be"
" shown if the authenticated user is also the owner of the lists. If "
"``user_id`` and ``screen_name`` are not provided, the ownerships for the "
"authenticating user are returned."
msgstr ""
"지정한 사용자가 소유 중인 리스트를 반환합니다. "
"비공개 리스트는 현재 인증된 사용자가 해당 리스트를 소유 중일 경우에만 결과에 표시됩니다. "
"``user_id`` 또는 ``screen_name`` 으로 특정 사용자를 지정하지 않을 경우, "
"대상은 현재 인증된 사용자가 됩니다."

#: of tweepy.api.API.get_list_ownerships:16
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-ownerships"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-ownerships"

#: of tweepy.api.API.get_list:1
msgid ""
"Returns the specified list. Private lists will only be shown if the "
"authenticated user owns the specified list."
msgstr ""
"지정한 리스트를 반환합니다. "
"비공개 리스트는 현재 인증된 사용자가 해당 리스트를 소유 중일 경우에만 결과에 표시됩니다. "

#: of tweepy.api.API.add_list_member:12 tweepy.api.API.add_list_members:15
#: tweepy.api.API.create_list:9 tweepy.api.API.destroy_list:10
#: tweepy.api.API.get_list:10 tweepy.api.API.remove_list_member:12
#: tweepy.api.API.remove_list_members:15 tweepy.api.API.subscribe_list:9
#: tweepy.api.API.unsubscribe_list:9 tweepy.api.API.update_list:13
msgid ":class:`~tweepy.models.List`"
msgstr ":class:`~tweepy.models.List`"

#: of tweepy.api.API.get_list:14
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-show"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-show"

#: of tweepy.api.API.list_timeline:1
msgid ""
"Returns a timeline of Tweets authored by members of the specified list. "
"Retweets are included by default. Use the ``include_rts=false`` parameter"
" to omit retweets."
msgstr ""
"지정한 리스트에 추가된 사람들이 작성한 트윗들로만 구성된 타임라인을 반환합니다."
"기본적으로 리트윗이 포함되며, 이를 생략하려면 ``include_rts=false`` 설정을 이용하세요."

#: of tweepy.api.API.list_timeline:13
msgid ""
"A boolean indicating whether the list timeline will contain native "
"retweets (if they exist) in addition to the standard stream of Tweets. "
"The output format of retweeted Tweets is identical to the representation "
"you see in home_timeline."
msgstr ""
"반환된 리스트 타임라인에 (존재할 경우) 리트윗을 반환할지의 여부를 나타내는 boolean값입니다. "
"리트윗된 트윗의 출력 형식은 home_timeline에서의 그것과 동일합니다."

#: of tweepy.api.API.list_timeline:23
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-statuses"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-statuses"

#: of tweepy.api.API.get_list_subscribers:1
msgid ""
"Returns the subscribers of the specified list. Private list subscribers "
"will only be shown if the authenticated user owns the specified list."
msgstr ""
"지정한 리스트를 구독 중인 사람(구독자)을 반환합니다. "
"비공개 리스트는 현재 인증된 사용자가 해당 리스트를 소유 중일 경우에만. "
"구독자를 볼 수 있습니다."

#: of tweepy.api.API.get_list_subscribers:18
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-subscribers"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-subscribers"

#: of tweepy.api.API.get_list_subscriber:1
msgid "Check if the specified user is a subscriber of the specified list."
msgstr "지정한 사용자가 지정한 리스트를 구독 중인지 확인합니다. "

#: of tweepy.api.API.get_list_subscriber:12
msgid "The user is not a subscriber of the list."
msgstr "해당 사용자가 해당 리스트의 구독자가 아님."

#: of tweepy.api.API.get_list_subscriber:19
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-subscribers-show"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-subscribers-show"

#: of tweepy.api.API.get_list_subscriptions:1
msgid ""
"Obtain a collection of the lists the specified user is subscribed to, 20 "
"lists per page by default. Does not include the user's own lists."
msgstr ""
"지정한 사용자가 구독 중인 리스트의 목록을 가져옵니다(기본적으로, 페이지당 20개). "
"단, 지정한 사용자가 소유 중인 리스트는 포함되지 않습니다. "

#: of tweepy.api.API.get_list_subscriptions:14
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-subscriptions"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/get-lists-subscriptions"

#: of tweepy.api.API.create_list:1
msgid ""
"Creates a new list for the authenticated user. Note that you can create "
"up to 1000 lists per account."
msgstr "현재 인증된 사용자 소유인 리스트를 만듭니다. "
"계정당 최대 생성 가능 리스트는 1000개임을 유의하시기 바랍니다. "

#: of tweepy.api.API.create_list:4
msgid "The name of the new list."
msgstr "만들 리스트의 이름."

#: of tweepy.api.API.create_list:5 tweepy.api.API.update_list:7
msgid "|list_mode|"
msgstr "목록의 공개·비공개를 설정할 수 있는 매개변수. "
"값은 ``public`` (공개) 또는 ``private`` (비공개) 둘 중 하나여야 하며, "
"따로 지정하지 않은 경우, ``public`` (공개)으로 간주합니다."

#: of tweepy.api.API.create_list:6
msgid "The description of the list you are creating."
msgstr "만들 리스트의 설명."

#: of tweepy.api.API.create_list:13
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-create"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-create"

#: of tweepy.api.API.destroy_list:1
msgid ""
"Deletes the specified list. The authenticated user must own the list to "
"be able to destroy it."
msgstr ""
"지정한 리스트를 삭제합니다. 현재 인증된 사용자가 소유 중인 리스트만 삭제할 수 있습니다. "

#: of tweepy.api.API.destroy_list:14
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-destroy"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-destroy"

#: of tweepy.api.API.add_list_member:1
msgid ""
"Add a member to a list. The authenticated user must own the list to be "
"able to add members to it. Lists are limited to 5,000 members."
msgstr ""
"리스트에 다른 사용자를 구성원으로서 추가합니다."
"현재 인증된 사용자가 소유한 리스트에만 가능하며, 리스트 구성원의 제한은 5,000명입니다."

#: of tweepy.api.API.add_list_member:16
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-members-create"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-members-create"

#: of tweepy.api.API.add_list_members:1
msgid ""
"Add up to 100 members to a list. The authenticated user must own the list"
" to be able to add members to it. Lists are limited to 5,000 members."
msgstr ""
"리스트에 최대 100명까지의 다른 사용자를 구성원으로서 추가합니다."
"현재 인증된 사용자가 소유한 리스트에만 가능하며, 리스트 구성원의 제한은 5,000명입니다."

#: of tweepy.api.API.add_list_members:7 tweepy.api.API.remove_list_members:7
msgid ""
"A comma separated list of user IDs, up to 100 are allowed in a single "
"request"
msgstr "쉼표(,)로 구분된 사용자 ID값. 1번의 요청에 최대 100개까지만 설정할 수 있습니다. "

#: of tweepy.api.API.add_list_members:9 tweepy.api.API.remove_list_members:9
msgid ""
"A comma separated list of screen names, up to 100 are allowed in a single"
" request"
msgstr "쉼표(,)로 구분된 screen_name값. 1번의 요청에 최대 100개까지만 설정할 수 있습니다. "

#: of tweepy.api.API.add_list_members:19
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-members-create_all"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-members-create_all"

#: of tweepy.api.API.remove_list_member:1
msgid ""
"Removes the specified member from the list. The authenticated user must "
"be the list's owner to remove members from the list."
msgstr ""
"지정한 사용자를 리스트 구성원에서 제거합니다."
"현재 인증된 사용자가 소유한 리스트에만 가능하며, 리스트 구성원의 제한은 5,000명입니다."

#: of tweepy.api.API.remove_list_member:16
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-members-destroy"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-members-destroy"

#: of tweepy.api.API.remove_list_members:1
msgid ""
"Remove up to 100 members from a list. The authenticated user must own the"
" list to be able to remove members from it. Lists are limited to 5,000 "
"members."
msgstr ""
"최대 100명까지의 지정한 사용자를 리스트 구성원에서 제거합니다."
"현재 인증된 사용자가 소유한 리스트에만 가능하며, 리스트 구성원의 제한은 5,000명입니다."

#: of tweepy.api.API.remove_list_members:19
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-members-destroy_all"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-members-destroy_all"

#: of tweepy.api.API.subscribe_list:1
msgid "Subscribes the authenticated user to the specified list."
msgstr "현재 인증된 사용자로서 지정한 리스트를 구독합니다. "

#: of tweepy.api.API.subscribe_list:13
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-subscribers-create"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-subscribers-create"

#: of tweepy.api.API.unsubscribe_list:1
msgid "Unsubscribes the authenticated user from the specified list."
msgstr "현재 인증된 사용자로서 지정한 리스트를 구독 해제합니다. "

#: of tweepy.api.API.unsubscribe_list:13
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-subscribers-destroy"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-subscribers-destroy"

#: of tweepy.api.API.update_list:1
msgid ""
"Updates the specified list. The authenticated user must own the list to "
"be able to update it."
msgstr "지정한 리스트를 수정(update)합니다. "
"현재 인증된 사용자가 소유 중인 리스트만 수정(update)이 가능합니다."

#: of tweepy.api.API.update_list:6
msgid "The name for the list."
msgstr "리스트의 새 이름. "

#: of tweepy.api.API.update_list:8
msgid "The description to give the list."
msgstr "리스트의 새 설명. "

#: of tweepy.api.API.update_list:17
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-update"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/create-manage-lists/api-reference/post-lists-update"

#: ../../api.rst:465
msgid "Follow, search, and get users"
msgstr "팔로우, 검색 및 사용자 관련"

#: of tweepy.api.API.get_follower_ids:1
msgid "Returns an array containing the IDs of users following the specified user."
msgstr "지정한 사용자를 팔로우하는 사용자의 ID 목록(array)을 반환합니다. "

#: of tweepy.api.API.get_follower_ids:15
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-followers-ids"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-followers-ids"

#: of tweepy.api.API.get_followers:1
msgid ""
"Returns a user's followers ordered in which they were added. If no user "
"is specified by id/screen name, it defaults to the authenticated user."
msgstr ""
"지정한 사용자의 팔로워를 최근 순으로 반환합니다. "
"ID값이나 screen_name값으로 특정 사용자를 지정하지 않은 경우, "
"현재 인증된 사용자를 기준으로 결과값을 반환합니다. "

#: of tweepy.api.API.get_followers:17
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-followers-list"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-followers-list"

#: of tweepy.api.API.get_friend_ids:1
msgid ""
"Returns an array containing the IDs of users being followed by the "
"specified user."
msgstr ""
"지정한 사용자가 팔로우하는 사용자의 ID 목록(array)을 반환합니다. "

#: of tweepy.api.API.get_friend_ids:15
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-friends-ids"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-friends-ids"

#: of tweepy.api.API.get_friends:1
msgid ""
"Returns a user's friends ordered in which they were added 100 at a time. "
"If no user is specified it defaults to the authenticated user."
msgstr "지정한 사용자가 팔로우 중인 사용자(user's friends)를, 한 번에 100명씩 반환합니다. "
"사용자를 따로 지정하지 않으면, 현재 인증된 사용자 기준 결과를 반환합니다."

#: of tweepy.api.API.get_friends:16
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-friends-list"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-friends-list"

#: of tweepy.api.API.incoming_friendships:1
msgid ""
"Returns a collection of numeric IDs for every user who has a pending "
"request to follow the authenticating user."
msgstr "현재 인증된 사용자에게 팔로우 요청을 보낸 모든 사용자에 대한 숫자형 ID 목록을 반환합니다."

#: of tweepy.api.API.incoming_friendships:12
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-friendships-incoming"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-friendships-incoming"

#: of tweepy.api.API.lookup_friendships:1
msgid ""
"Returns the relationships of the authenticated user to the list of up to "
"100 screen_name or user_id provided."
msgstr ""
"최대 100개의 요소로 이루어진 screen_name나 user_name의 목록을 이용해, "
"현재 인증된 사용자와 해당 목록의 사용자와의 관계를 목록으로 반환합니다."

#: of tweepy.api.API.lookup_friendships:4 tweepy.api.API.lookup_users:10
msgid "A list of screen names, up to 100 are allowed in a single request."
msgstr "screen_name의 목록. 한 번에 최대 100명에 대해서만 요청 가능합니다."

#: of tweepy.api.API.lookup_friendships:5 tweepy.api.API.lookup_users:11
msgid "A list of user IDs, up to 100 are allowed in a single request."
msgstr "user_id의 목록. 한 번에 최대 100명에 대해서만 요청 가능합니다."

#: of tweepy.api.API.lookup_friendships:8
msgid ":py:class:`List`\\[:class:`~tweepy.models.Relationship`]"
msgstr ":py:class:`List`\\[:class:`~tweepy.models.Relationship`]"

#: of tweepy.api.API.lookup_friendships:12
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-friendships-lookup"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-friendships-lookup"

#: of tweepy.api.API.no_retweets_friendships:1
msgid ""
"Returns a collection of user_ids that the currently authenticated user "
"does not want to receive retweets from."
msgstr ""
"현재 인증된 사용자가 '리트윗 끄기'를 설정한 사용자의 user_id 목록을 반환합니다. "

#: of tweepy.api.API.no_retweets_friendships:11
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-friendships-no_retweets-ids"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-friendships-no_retweets-ids"

#: of tweepy.api.API.outgoing_friendships:1
msgid ""
"Returns a collection of numeric IDs for every protected user for whom the"
" authenticating user has a pending follow request."
msgstr ""
"현재 인증된 사용자가 팔로우 요청을 보낸 (비공개 계정인) 사용자들의 목록을 반환합니다."

#: of tweepy.api.API.outgoing_friendships:12
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-friendships-outgoing"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-friendships-outgoing"

#: of tweepy.api.API.get_friendship:1
msgid "Returns detailed information about the relationship between two users."
msgstr "지정한 두 사용자의 관계에 대한 자세한 정보를 반환합니다."

#: of tweepy.api.API.get_friendship:3
msgid "The user_id of the subject user."
msgstr "주 대상(subject) 사용자의 user_id."

#: of tweepy.api.API.get_friendship:4
msgid "The screen_name of the subject user."
msgstr "주 대상(subject) 사용자의 screen_name."

#: of tweepy.api.API.get_friendship:5
msgid "The user_id of the target user."
msgstr "부 대상(target) 사용자의 user_id."

#: of tweepy.api.API.get_friendship:6
msgid "The screen_name of the target user."
msgstr "부 대상(target) 사용자의 screen_name."

#: of tweepy.api.API.get_friendship:9 tweepy.api.API.update_friendship:9
msgid ":class:`~tweepy.models.Friendship`"
msgstr ":class:`~tweepy.models.Friendship`"

#: of tweepy.api.API.get_friendship:13
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-friendships-show"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-friendships-show"

#: of tweepy.api.API.lookup_users:1
msgid "Returns fully-hydrated user objects for up to 100 users per request."
msgstr "요청당 최대 100명의 사용자에 대해, 데이터가 채워진(Fully-Hydrated) 사용자 객체를 반환합니다. "

#: of tweepy.api.API.lookup_users:3
msgid "There are a few things to note when using this method."
msgstr "이 메서드를 사용할 때 몇 가지 알아두어야 하는 것이 있습니다. "

#: of tweepy.api.API.lookup_users:5
msgid ""
"You must be following a protected user to be able to see their most"
"             recent status update. If you don't follow a protected user "
"their             status will be removed."
msgstr ""
"비공개 계정인 사용자의 최근 트윗(Recent status)을 보려면 (현재 인증된 사용자가) "
"해당 사용자를 팔로우하고 있는 상태여야 합니다. 팔로우 상태가 아닐 경우, "
"해당 사용자의 트윗은 결과에서 제외되게 됩니다. "

#: of tweepy.api.API.lookup_users:6
msgid ""
"The order of user IDs or screen names may not match the order of"
"             users in the returned array."
msgstr ""
"사용자 ID값이나 screen_name의 순서가 반환받은 목록에서의 순서와 일치하지 않을 수 있습니다."

#: of tweepy.api.API.lookup_users:7
msgid ""
"If a requested user is unknown, suspended, or deleted, then that"
"             user will not be returned in the results list."
msgstr ""
"지정한 사용자를 찾을 수 없거나(Unknown), 해당 사용자의 계정이 정지되었거나 삭제된 경우 "
"반환되는 목록에 해당 사용자가 포함되지 않습니다. "

#: of tweepy.api.API.lookup_users:8
msgid ""
"If none of your lookup criteria can be satisfied by returning a"
"             user object, a HTTP 404 will be thrown."
msgstr ""
"검색 조건에 부합하여 반환할 사용자 객체가 하나도 없는 경우, "
"HTTP 404 예외가 발생합니다. "

#: of tweepy.api.API.lookup_users:13
msgid ""
"Valid request values are compat and extended, which give compatibility "
"mode and extended mode, respectively for Tweets that contain over 140 "
"characters."
msgstr ""
"``compat`` (호환 트윗)과 ``extended`` (확장 트윗) 중 하나로 입력합니다. "
"각각 순서대로 140자 이상 트윗에 대해 '호환 모드'와 '확장 모드'를 제공합니다. "

#: of tweepy.api.API.lookup_users:22
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-users-lookup"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-users-lookup"

#: of tweepy.api.API.search_users:1
msgid ""
"Run a search for users similar to Find People button on Twitter.com; the "
"same results returned by people search on Twitter.com will be returned by"
" using this API (about being listed in the People Search). It is only "
"possible to retrieve the first 1000 matches from this API."
msgstr ""
"트위터의 '사용자 검색' 과 동일한 검색 기능을 실행합니다. "
"이 API를 이용한 검색은, 트위터에서 제공하는 것과 동일한 검색 결과를 "
"반환합니다. 단, 최대 첫 1000개의 결과만 가져올 수 있습니다."

#: of tweepy.api.API.search_users:6
msgid "The query to run against people search."
msgstr "사용자 검색에 사용할 검색어"

#: of tweepy.api.API.search_users:7
msgid "|page|"
msgstr "검색 결과의 페이지. 참고: 페이지 수에 제한이 있음."

#: of tweepy.api.API.search_users:16
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-users-search"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-users-search"

#: of tweepy.api.API.get_user:1
msgid "Returns information about the specified user."
msgstr "지정한 사용자의 정보를 반환합니다."

#: of tweepy.api.API.get_user:12
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-users-show"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/get-users-show"

#: of tweepy.api.API.create_friendship:1
msgid "Create a new friendship with the specified user (aka follow)."
msgstr "지정한 사용자를 팔로우(Make friendship)합니다."

#: of tweepy.api.API.create_friendship:5
msgid "Enable notifications for the target user in addition to becoming friends."
msgstr "해당 사용자를 팔로우함과 동시에 '모든 트윗에 대해 알림 받기'(이하 트윗 알림)를 설정합니다. "

#: of tweepy.api.API.create_friendship:13
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/post-friendships-create"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/post-friendships-create"

#: of tweepy.api.API.destroy_friendship:1
msgid "Destroy a friendship with the specified user (aka unfollow)."
msgstr "지정한 사용자를 언팔로우(Destroy friendship)합니다."

#: of tweepy.api.API.destroy_friendship:11
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/post-friendships-destroy"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/post-friendships-destroy"

#: of tweepy.api.API.update_friendship:1
msgid "Turn on/off Retweets and device notifications from the specified user."
msgstr "지정한 사용자의 트윗 알림 및 리트윗을 켜거나 끕니다."

#: of tweepy.api.API.update_friendship:5
msgid "Turn on/off device notifications from the target user."
msgstr "대상 사용자의 트윗 알림 켜거나 끄기."

#: of tweepy.api.API.update_friendship:6
msgid "Turn on/off Retweets from the target user."
msgstr "대상 사용자의 리트윗 보기 켜거나 끄기."

#: of tweepy.api.API.update_friendship:13
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/post-friendships-update"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/follow-search-get-users/api-reference/post-friendships-update"

#: ../../api.rst:498
msgid "Manage account settings and profile"
msgstr "계정 설정 및 프로필 관리"

#: of tweepy.api.API.get_settings:1
msgid ""
"Returns settings (including current trend, geo and sleep time "
"information) for the authenticating user."
msgstr ""
"현재 인증된 사용자에 대한 설정값(나를 위한 트렌드, 지역 및 방해금지 시간 등)을 "
"반환합니다."

#: of tweepy.api.API.get_settings:9
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/get-account-settings"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/get-account-settings"

#: of tweepy.api.API.verify_credentials:1
msgid "Verify the supplied user credentials are valid."
msgstr "사용자 자격 증명이 올바른지 확인합니다."

#: of tweepy.api.API.verify_credentials:5
msgid "When set to true email will be returned in the user objects as a string."
msgstr "``true`` 로 설정하면, 사용자 객체에 이메일 주소가 문자열 형태로 반환됩니다. "

#: of tweepy.api.API.verify_credentials:8
msgid "Authentication unsuccessful"
msgstr "사용자 인증에 실패한 경우. "

#: of tweepy.api.API.verify_credentials:15
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/get-account-verify_credentials"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/get-account-verify_credentials"

#: of tweepy.api.API.get_saved_searches:1
msgid "Returns the authenticated user's saved search queries."
msgstr "현재 인증된 사용자가 저장한 검색어의 목록을 반환합니다."

#: of tweepy.api.API.get_saved_searches:4
msgid ":py:class:`List`\\[:class:`~tweepy.models.SavedSearch`]"
msgstr ":py:class:`List`\\[:class:`~tweepy.models.SavedSearch`]"

#: of tweepy.api.API.get_saved_searches:8
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/get-saved_searches-list"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/get-saved_searches-list"

#: of tweepy.api.API.get_saved_search:1
msgid ""
"Retrieve the data for a saved search owned by the authenticating user "
"specified by the given ID."
msgstr "현재 인증된 사용자가 소유 중인, "
"ID로 지정한 '저장된 검색어'에 대한 정보를 반환합니다. "

#: of tweepy.api.API.get_saved_search:4
msgid "The ID of the saved search to be retrieved."
msgstr "검색할 '저장된 검색어'의 고유 ID값."

#: of tweepy.api.API.create_saved_search:6
#: tweepy.api.API.destroy_saved_search:7 tweepy.api.API.get_saved_search:7
msgid ":class:`~tweepy.models.SavedSearch`"
msgstr ":class:`~tweepy.models.SavedSearch`"

#: of tweepy.api.API.get_saved_search:11
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/get-saved_searches-show-id"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/get-saved_searches-show-id"

#: of tweepy.api.API.get_profile_banner:1
msgid ""
"Returns a map of the available size variations of the specified user's "
"profile banner. If the user has not uploaded a profile banner, a HTTP 404"
" will be served instead."
msgstr ""
"지정한 사용자의 프로필 배너를, 여러 크기로 이용할 수 있도록 반환합니다."
"지정한 사용자가 프로필 배너를 업로드하지 않았을 경우, HTTP 404 예외가 발생합니다. "

#: of tweepy.api.API.get_profile_banner:5
msgid ""
"The profile banner data available at each size variant's URL is in PNG "
"format."
msgstr ""
"각 크기별 프로필 배너는 PNG 형식입니다."

#: of tweepy.api.API.get_profile_banner:16
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/get-users-profile_banner"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/get-users-profile_banner"

#: of tweepy.api.API.remove_profile_banner:1
msgid "Removes the uploaded profile banner for the authenticating user."
msgstr "현재 인증된 사용자의 프로필 배너를 제거합니다."

#: of tweepy.api.API.remove_profile_banner:5
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/post-account-remove_profile_banner"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/post-account-remove_profile_banner"

#: of tweepy.api.API.set_settings:1
msgid "Updates the authenticating user's settings."
msgstr "현재 인증된 사용자의 설정값을 변경합니다. "

#: of tweepy.api.API.set_settings:3
msgid ""
"When set to ``true``, ``t`` or ``1`` , will enable sleep time for the "
"user. Sleep time is the time when push or SMS notifications should not be"
" sent to the user."
msgstr ""
"``true``, ``t``, 또는 ``1`` 로 설정하면, 방해 금지 모드(sleep time)를 활성화합니다. "
"방해 금지 시간대에는 사용자에게 푸시 알림 또는 SMS 알림을 보내지 않습니다. "

#: of tweepy.api.API.set_settings:6
msgid ""
"The hour that sleep time should begin if it is enabled. The value for "
"this parameter should be provided in `ISO 8601`_ format (i.e. 00-23). The"
" time is considered to be in the same timezone as the user's "
"``time_zone`` setting."
msgstr ""
"방해 금지 모드를 자동 활성화할 시간대입니다. "
"이 매개변수의 형식은 `ISO 8601`_ 형식(즉, hh-mm 형식)으로 제공되어야 하며, "
"시간대는 현재 사용자의 ``time_zone`` 설정과 동일한 시간대로 설정됩니다."

#: of tweepy.api.API.set_settings:10
msgid ""
"The hour that sleep time should end if it is enabled. The value for this "
"parameter should be provided in `ISO 8601`_ format (i.e. 00-23). The time"
" is considered to be in the same timezone as the user's ``time_zone`` "
"setting."
msgstr ""
"방해 금지 모드를 자동 비활성화할 시간대입니다. "
"이 매개변수의 형식은 `ISO 8601`_ 형식(즉, hh-mm 형식)으로 제공되어야 하며, "
"시간대는 현재 사용자의 ``time_zone`` 설정과 동일한 시간대로 설정됩니다."

#: of tweepy.api.API.set_settings:14
msgid ""
"The timezone dates and times should be displayed in for the user. The "
"timezone must be one of the `Rails TimeZone`_ names."
msgstr ""
"현재 사용의 표준 시간대를 설정합니다. "
"표준 시간대의 이름은 `Rails의 TimeZone 이름`_ 을 따라야 합니다. "
"(예: 한국의 경우 \"Seoul\")"

#: of tweepy.api.API.set_settings:16
msgid ""
"The Yahoo! Where On Earth ID to use as the user's default trend location."
" Global information is available by using 1 as the WOEID."
msgstr ""
"나를 위한 트렌드 기준을 설정할 위치의 야후 Where On Earth ID값. "

#: of tweepy.api.API.set_settings:18
msgid ""
"The language which Twitter should render in for this user. The language "
"must be specified by the appropriate two letter ISO 639-1 representation."
msgstr ""
"사용자에 대해 트위터가 보여주어야 하는 언어. "
"언어는 반드시 ISO 639-1 국제 표준을 따라 두 글자로 명시되어야만 합니다. "

#: of tweepy.api.API.set_settings:27
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/post-account-settings"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/post-account-settings"

#: of tweepy.api.API.update_profile:1
msgid ""
"Sets values that users are able to set under the \"Account\" tab of their"
" settings page."
msgstr "사용자가 설정 페이지의 \"계정\" 탭에서 설정 가능한 값들을 수정합니다."

#: of tweepy.api.API.update_profile:4
msgid "Full name associated with the profile."
msgstr "사용자의 이름(닉네임)."

#: of tweepy.api.API.update_profile:5
msgid ""
"URL associated with the profile. Will be prepended with ``http://`` if "
"not present"
msgstr "프로필에 연결할 URL. ``http://`` 를 붙이지 않은 경우 자동으로 이를 앞에 붙입니다. "

#: of tweepy.api.API.update_profile:7
msgid ""
"The city or country describing where the user of the account is located. "
"The contents are not normalized or geocoded in any way."
msgstr ""
"사용자가 위치한 도시 및 국가. 내용은 정규화되거나 지리적 코드화되지 않았습니다"
"(즉, 자유로이 입력할 수 있습니다). "

#: of tweepy.api.API.update_profile:9
msgid "A description of the user owning the account."
msgstr "사용자의 자기소개(바이오)."

#: of tweepy.api.API.update_profile:10
msgid ""
"Sets a hex value that controls the color scheme of links used on the "
"authenticating user's profile page on twitter.com. This must be a valid "
"hexadecimal value, and may be either three or six characters (ex: F00 or "
"FF0000)."
msgstr ""
"현재 인증된 사용자의 프로필 페이지에 사용되는 링크의 색깔을 16진수 값으로 설정합니다. "
"유효한 16진수 값이어야 하며, 3자 또는 6자일 수 있습니다(예: F00 또는 FCACD3)"

#: of tweepy.api.API.update_profile:22
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/post-account-update_profile"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/post-account-update_profile"

#: of tweepy.api.API.update_profile_banner:1
msgid "Uploads a profile banner on behalf of the authenticating user."
msgstr "현재 인증된 사용자의 배너 이미지를 업로드합니다. "

#: of tweepy.api.API.update_profile_banner:5
msgid ""
"The width of the preferred section of the image being uploaded in pixels."
" Use with ``height``, ``offset_left``, and ``offset_top`` to select the "
"desired region of the image to use."
msgstr ""
"배너로 사용할 이미지의 너비값을 픽셀 단위로 설정합니다. "
"``height``, ``offset_left``, ``offset_top`` 과 함께 사용해, "
"업로드 중인 이미지에서 어떤 영역을 사용할 것인지를 정할 수 있습니다. "

#: of tweepy.api.API.update_profile_banner:8
msgid ""
"The height of the preferred section of the image being uploaded in "
"pixels. Use with ``width``, ``offset_left``, and ``offset_top`` to select"
" the desired region of the image to use."
msgstr ""
"배너로 사용할 이미지의 높이값을 픽셀 단위로 설정합니다. "
"``width``, ``offset_left``, ``offset_top`` 과 함께 사용해, "
"업로드 중인 이미지에서 어떤 영역을 사용할 것인지를 정할 수 있습니다. "

#: of tweepy.api.API.update_profile_banner:11
msgid ""
"The number of pixels by which to offset the uploaded image from the left."
" Use with ``height``, ``width``, and ``offset_top`` to select the desired"
" region of the image to use."
msgstr ""
"배너로 사용할 이미지가 원본 이미지의 맨 왼쪽에서 얼마나 떨어져 있는지를 픽셀 단위로 설정합니다. "
"``width``, ``height``, ``offset_top`` 과 함께 사용해, "
"업로드 중인 이미지에서 어떤 영역을 사용할 것인지를 정할 수 있습니다. "

#: of tweepy.api.API.update_profile_banner:14
msgid ""
"The number of pixels by which to offset the uploaded image from the top. "
"Use with ``height``, ``width``, and ``offset_left`` to select the desired"
" region of the image to use."
msgstr ""
"배너로 사용할 이미지가 원본 이미지의 맨 위쪽에서 얼마나 떨어져 있는지를 픽셀 단위로 설정합니다. "
"``width``, ``height``, ``offset_top`` 과 함께 사용해, "
"업로드 중인 이미지에서 어떤 영역을 사용할 것인지를 정할 수 있습니다. "

#: of tweepy.api.API.update_profile_banner:20
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/post-account-update_profile_banner"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/post-account-update_profile_banner"

#: of tweepy.api.API.update_profile_image:1
msgid ""
"Update the authenticating user's profile image. Valid formats: GIF, JPG, "
"or PNG"
msgstr ""
"현재 인증된 사용자의 프로필 이미지(인장)를 바꿉니다. "
"올바른 파일 형식은 GIF, JPG, PNG 입니다. "

#: of tweepy.api.API.update_profile_image:14
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/post-account-update_profile_image"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/post-account-update_profile_image"

#: of tweepy.api.API.create_saved_search:1
msgid "Creates a saved search for the authenticated user."
msgstr "현재 인증된 사용자의 '저장된 검색어'를 만듭니다."

#: of tweepy.api.API.create_saved_search:3
msgid "The query of the search the user would like to save."
msgstr "저장할 검색어(또는 검색 조건)."

#: of tweepy.api.API.create_saved_search:10
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/post-saved_searches-create"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/post-saved_searches-create"

#: of tweepy.api.API.destroy_saved_search:1
msgid ""
"Destroys a saved search for the authenticated user. The search specified "
"by ID must be owned by the authenticating user."
msgstr ""
"현재 인증된 사용자의 '저장된 검색어'를 삭제합니다. "
"반드시 해당 검색어의 고유 ID값이 현재 인증된 사용자의 소유여야 합니다. "

#: of tweepy.api.API.destroy_saved_search:4
msgid "The ID of the saved search to be deleted."
msgstr "삭제할 검색어의 고유 ID값."

#: of tweepy.api.API.destroy_saved_search:11
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/post-saved_searches-destroy-id"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/manage-account-settings/api-reference/post-saved_searches-destroy-id"

#: ../../api.rst:525
msgid "Mute, block, and report users"
msgstr "사용자 뮤트, 차단, 신고"

#: of tweepy.api.API.get_blocked_ids:1
msgid "Returns an array of numeric user IDs the authenticating user is blocking."
msgstr "현재 인증된 사용자가 차단한 사용자를 숫자형 ID값의 배열 꼴로 반환합니다. "

#: of tweepy.api.API.get_blocked_ids:12
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/get-blocks-ids"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/get-blocks-ids"

#: of tweepy.api.API.get_blocks:1
msgid "Returns an array of user objects that the authenticating user is blocking."
msgstr "현재 인증된 사용자가 차단한 사용자를 사용자 객체의 배열 꼴로 반환합니다. "

#: of tweepy.api.API.get_blocks:13
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/get-blocks-list"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/get-blocks-list"

#: of tweepy.api.API.get_muted_ids:1
msgid "Returns an array of numeric user IDs the authenticating user has muted."
msgstr "현재 인증된 사용자가 뮤트한 사용자를 숫자형 ID값의 배열 꼴로 반환합니다. "

#: of tweepy.api.API.get_muted_ids:11
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/get-mutes-users-ids"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/get-mutes-users-ids"

#: of tweepy.api.API.get_mutes:1
msgid "Returns an array of user objects the authenticating user has muted."
msgstr "현재 인증된 사용자가 뮤트한 사용자를 사용자 객체의 배열 꼴로 반환합니다. "

#: of tweepy.api.API.get_mutes:12
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/get-mutes-users-list"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/get-mutes-users-list"

#: of tweepy.api.API.create_block:1
msgid ""
"Blocks the specified user from following the authenticating user. In "
"addition the blocked user will not show in the authenticating users "
"mentions or timeline (unless retweeted by another user). If a follow or "
"friend relationship exists it is destroyed."
msgstr ""
"현재 인증된 사용자로서 지정한 사용자를 차단합니다. "
"차단된 사용자는 현재 인증된 사용자의 타임라인에 표시되지 않으며, 멘션도 불가능합니다"
"(단, 다른 사람이 리트윗한 경우 보일 수 있습니다). 차단하면, 모든 팔로우 및 팔로잉 "
"관계는 자동적으로 해제됩니다."

#: of tweepy.api.API.create_block:16
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/post-blocks-create"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/post-blocks-create"

#: of tweepy.api.API.destroy_block:1
msgid ""
"Un-blocks the user specified in the ID parameter for the authenticating "
"user."
msgstr "현재 인증된 사용자로서, ID값으로 지정한 사용자를 차단 해제합니다."

#: of tweepy.api.API.destroy_block:14
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/post-blocks-destroy"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/post-blocks-destroy"

#: of tweepy.api.API.create_mute:1
msgid "Mutes the user specified in the ID parameter for the authenticating user."
msgstr "현재 인증된 사용자로서 지정한 사용자를 뮤트합니다. "

#: of tweepy.api.API.create_mute:12
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/post-mutes-users-create"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/post-mutes-users-create"

#: of tweepy.api.API.destroy_mute:1
msgid ""
"Un-mutes the user specified in the ID parameter for the authenticating "
"user."
msgstr "현재 인증된 사용자로서, ID값으로 지정한 사용자를 언뮤트(뮤트 해제)합니다."

#: of tweepy.api.API.destroy_mute:12
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/post-mutes-users-destroy"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/post-mutes-users-destroy"

#: of tweepy.api.API.report_spam:1
msgid "Report the specified user as a spam account to Twitter."
msgstr "지정한 사용자를 트위터에 스팸으로 신고합니다. "

#: of tweepy.api.API.report_spam:5
msgid ""
"A boolean indicating if the reported account should be blocked. Defaults "
"to True."
msgstr "신고할 사용자를 차단할지의 여부를 나타내는 boolean 값. 기본값은 True."

#: of tweepy.api.API.report_spam:13
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/post-users-report_spam"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/accounts-and-users"
"/mute-block-report-users/api-reference/post-users-report_spam"

#: ../../api.rst:546
msgid "Direct Messages"
msgstr "쪽지(DM, Direct Message)"

#: ../../api.rst:549
msgid "Sending and receiving events"
msgstr "전송 및 수신 이벤트"

#: of tweepy.api.API.delete_direct_message:1
msgid ""
"Deletes the direct message specified in the required ID parameter. The "
"authenticating user must be the recipient of the specified direct "
"message. Direct Messages are only removed from the interface of the user "
"context provided. Other members of the conversation can still access the "
"Direct Messages."
msgstr ""
"필수 입력인 ID값을 이용해 지정한 쪽지를 삭제합니다. "
"현재 인증된 사용자가 해당 쪽지의 수신자여야 합니다."
"쪽지는 나에게서만 삭제되며, 다른 대화 구성원들은 해당 메세지에 접근할 수 있습니다."

#: of tweepy.api.API.delete_direct_message:7
msgid "The ID of the Direct Message that should be deleted."
msgstr "삭제할 쪽지의 고유 ID값."

#: of tweepy.api.API.delete_direct_message:11
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages"
"/sending-and-receiving/api-reference/delete-message-event"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages"
"/sending-and-receiving/api-reference/delete-message-event"

#: of tweepy.api.API.get_direct_messages:1
msgid ""
"Returns all Direct Message events (both sent and received) within the "
"last 30 days. Sorted in reverse-chronological order."
msgstr ""
"최근 30일 이내의 모든 쪽지를 반환합니다. 받은 순서의 역순으로 정렬됩니다. "
"(즉, 나중에 받은 쪽지가 먼저 반환됩니다.)"

#: of tweepy.api.API.get_direct_messages:8
msgid ":py:class:`List`\\[:class:`~tweepy.models.DirectMessage`]"
msgstr ":py:class:`List`\\[:class:`~tweepy.models.DirectMessage`]"

#: of tweepy.api.API.get_direct_messages:12
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages"
"/sending-and-receiving/api-reference/list-events"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages"
"/sending-and-receiving/api-reference/list-events"

#: of tweepy.api.API.get_direct_message:1
msgid "Returns a specific direct message."
msgstr "지정한 쪽지를 반환합니다."

#: of tweepy.api.API.get_direct_message:3
msgid "The ID of the Direct Message event that should be returned."
msgstr "반환받을 쪽지의 고유 ID값."

#: of tweepy.api.API.get_direct_message:6 tweepy.api.API.send_direct_message:13
msgid ":class:`~tweepy.models.DirectMessage`"
msgstr ":class:`~tweepy.models.DirectMessage`"

#: of tweepy.api.API.get_direct_message:10
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages"
"/sending-and-receiving/api-reference/get-event"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages"
"/sending-and-receiving/api-reference/get-event"

#: of tweepy.api.API.send_direct_message:1
msgid ""
"Sends a new direct message to the specified user from the authenticating "
"user."
msgstr "현재 인증된 사용자로서 지정한 사용자에게 쪽지를 보냅니다. "

#: of tweepy.api.API.send_direct_message:4
msgid "The ID of the user who should receive the direct message."
msgstr "쪽지를 받을 사용자의 ID."

#: of tweepy.api.API.send_direct_message:5
msgid "The text of your Direct Message. Max length of 10,000 characters."
msgstr "보낼 쪽지의 본문. 최대 10,000자까지 작성할 수 있습니다. "

#: of tweepy.api.API.send_direct_message:6
msgid "Array of Options objects (20 max)."
msgstr "빠른 답장 옵션 객체의 목록(최대 20개까지 가능)."

#: of tweepy.api.API.send_direct_message:7
msgid "The attachment type. Can be media or location."
msgstr "첨부파일의 종류. media(미디어)나 location(위치)가 될 수 있습니다. "

#: of tweepy.api.API.send_direct_message:8
msgid ""
"A media id to associate with the message. A Direct Message may only "
"reference a single media_id."
msgstr "쪽지에 연결할 미디어의 ID값. 한 쪽지에는 하나의 미디어만 연결할 수 있습니다. "

#: of tweepy.api.API.send_direct_message:10
msgid "Array of 1-3 call-to-action (CTA) button objects"
msgstr "1~3개의 CTA(Call-to-action)버튼 객체. 필수값은 아님. "

#: of tweepy.api.API.send_direct_message:17
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages"
"/sending-and-receiving/api-reference/new-event"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages"
"/sending-and-receiving/api-reference/new-event"

#: ../../api.rst:560
msgid "Media"
msgstr "미디어"

#: ../../api.rst:563
msgid "Upload media"
msgstr "미디어 업로드"

#: of tweepy.api.API.get_media_upload_status:1
msgid ""
"Check on the progress of a chunked media upload. If the upload has "
"succeeded, it's safe to create a Tweet with this ``media_id``."
msgstr ""
"청크 전송법을 이용하는 미디어의 전송률을 확인합니다. "
"업로드가 완료된 이후라면 이 미디어의 ``media_id`` 값을 이용해 트윗할 수 있습니다. "

#: of tweepy.api.API.get_media_upload_status:4
msgid "The ID of the media to check."
msgstr "전송률을 확인할 미디어의 ID값."

#: of tweepy.api.API.chunked_upload:16 tweepy.api.API.chunked_upload_finalize:9
#: tweepy.api.API.chunked_upload_init:9
#: tweepy.api.API.get_media_upload_status:7 tweepy.api.API.media_upload:15
#: tweepy.api.API.simple_upload:10
msgid ":class:`~tweepy.models.Media`"
msgstr ":class:`~tweepy.models.Media`"

#: of tweepy.api.API.get_media_upload_status:11
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media"
"/api-reference/get-media-upload-status"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media"
"/api-reference/get-media-upload-status"

#: of tweepy.api.API.create_media_metadata:1
msgid ""
"This endpoint can be used to provide additional information about the "
"uploaded ``media_id``. This feature is currently only supported for "
"images and GIFs. Call this endpoint to attach additional metadata such as"
" image alt text."
msgstr ""
"이 엔드포인트를 사용해, 업로드된 ``media_id`` 에 대한 추가 정보를 제공할 수 있습니다. "
"이 메서드는 현재 이미지(GIF 포함)에만 적용됩니다. 이미지에 대체 텍스트와 같은 "
"추가 메타데이터를 첨부해야 할 때, 이 엔드포인트를 호출하면 됩니다."

#: of tweepy.api.API.create_media_metadata:6
msgid "The ID of the media to add alt text to."
msgstr "대체 텍스트를 추가할 미디어의 ID값. "

#: of tweepy.api.API.create_media_metadata:7
msgid "The alt text to add to the image."
msgstr "이미지에 추가할 대체 텍스트 본문. "

#: of tweepy.api.API.create_media_metadata:11
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media"
"/api-reference/post-media-metadata-create"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media"
"/api-reference/post-media-metadata-create"

#: of tweepy.api.API.media_upload:1
msgid ""
"Use this to upload media to Twitter. This calls either "
":func:`API.simple_upload` or :func:`API.chunked_upload`. Chunked media "
"upload is automatically used for videos. If ``chunked`` is set or the "
"media is a video, ``wait_for_async_finalize`` can be specified as a "
"keyword argument to be passed to :func:`API.chunked_upload`."
msgstr ""
"트위터에 미디어를 업로드합니다. 이 메서드는 :func:`API.simple_upload` 또는 "
":func:`API.chunked_upload` 를 호출하게 됩니다. 영상 미디어일 경우, 자동으로 "
"청크 전송법을 이용하게 바뀝니다. 미디어가 영상 형식이거나 "
"청크 전송법을 이용(``chunked``)하는 경우, ``wait_for_async_finalize`` 를 "
"키워드 인수로 지정해 :func:`API.chunked_upload` 에 전달할 수 있습니다. "

#: of tweepy.api.API.media_upload:9
msgid ""
"Whether or not to use chunked media upload. Videos use chunked upload "
"regardless of this parameter. Defaults to ``False``."
msgstr ""
"미디어를 업로드할 때 청크 전송법을 사용할지의 여부. "
"영상 미디어는 이 매개변수 값과 관련 없이 청크 전송법을 사용합니다. 기본값은 ``False``."

#: of tweepy.api.API.chunked_upload:12 tweepy.api.API.chunked_upload_init:5
#: tweepy.api.API.media_upload:11 tweepy.api.API.simple_upload:6
msgid "|media_category|"
msgstr ""
"미디어가 어떤 방식으로 이용되는지를 나타내는 매개변수. "
"이 매개변수는 보통 트위터 광고 API와 함께 미디어를 사용해야 할 때 필요합니다. "

#: of tweepy.api.API.chunked_upload:13 tweepy.api.API.chunked_upload_init:6
#: tweepy.api.API.media_upload:12 tweepy.api.API.simple_upload:7
msgid "|additional_owners|"
msgstr ""
"트윗 또는 카드에서 반환된 미디어의 media_id를 사용할 수 있는 추가 소유자로 지정할 "
"사용자 ID값의 목록입니다. 최대 100명까지 추가 소유자로 지정 가능합니다."

#: of tweepy.api.API.media_upload:19
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-"
"media/overview"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-"
"media/overview"

#: of tweepy.api.API.simple_upload:1
msgid ""
"Use this endpoint to upload media to Twitter. This does not use the "
"chunked upload endpoints."
msgstr ""
"이 엔드포인트를 이용해, 트위터에 미디어를 업로드할 수 있습니다. "
"청크 전송법 엔드포인트를 사용하지 않는 엔드포인트입니다."

#: of tweepy.api.API.simple_upload:14
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media"
"/api-reference/post-media-upload"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media"
"/api-reference/post-media-upload"

#: of tweepy.api.API.chunked_upload:1
msgid ""
"Use this to upload media to Twitter. This uses the chunked upload "
"endpoints and calls :func:`API.chunked_upload_init`, "
":func:`API.chunked_upload_append`, and "
":func:`API.chunked_upload_finalize`. If ``wait_for_async_finalize`` is "
"set, this calls :func:`API.get_media_upload_status` as well."
msgstr ""
"청크 전송법을 사용하여 트위터에 미디어를 업로드합니다. "
"이 메서드는 청크 전송법의 엔드포인트를 사용하며, :func:`API.chunked_upload_init`, "
":func:`API.chunked_upload_append` 및 :func:`API.chunked_upload_finalize` 를 "
"호출합니다. ``wait_for_async_finalize`` 가 설정된 경우, "
":func:`API.get_media_upload_status` 도 같이 호출합니다."

#: of tweepy.api.API.chunked_upload:9 tweepy.api.API.chunked_upload_init:4
msgid "The MIME type of the media being uploaded."
msgstr "업로드되는 미디어의 MIME 타입. "

#: of tweepy.api.API.chunked_upload:10
msgid ""
"Whether to wait for Twitter's API to finish processing the media. "
"Defaults to ``True``."
msgstr "트위터 API가 미디어 관련 처리를 완료할 때까지 기다릴지의 여부. 기본값은 True."

#: of tweepy.api.API.chunked_upload:20
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media"
"/uploading-media/chunked-media-upload"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media"
"/uploading-media/chunked-media-upload"

#: of tweepy.api.API.chunked_upload_append:1
msgid ""
"Use this endpoint to upload a chunk (consecutive byte range) of the media"
" file."
msgstr "이 엔드포인트를 사용해, 미디어 파일의 청크(연속된 바이트 범위로)를 업로드합니다. "

#: of tweepy.api.API.chunked_upload_append:4
#: tweepy.api.API.chunked_upload_finalize:6
msgid "The ``media_id`` returned from the initialization."
msgstr "첫 청크에서 반환한 ``media_id``."

#: of tweepy.api.API.chunked_upload_append:5
msgid "The raw binary file content being uploaded. It must be <= 5 MB."
msgstr "업로드할 바이너리 파일. 파일 크기는 5MB보다 작거나 같아야 합니다."

#: of tweepy.api.API.chunked_upload_append:6
msgid ""
"An ordered index of file chunk. It must be between 0-999 inclusive. The "
"first segment has index 0, second segment has index 1, and so on."
msgstr ""
"이 청크의 순서. 0부터 999 사이의 정수값이어야 하며, 첫 청크는 0의 값을 가집니다."
"두 번째 청크는 1, 세 번째 청크는 2의 값을 가지며, 이하상동입니다."

#: of tweepy.api.API.chunked_upload_append:12
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media"
"/api-reference/post-media-upload-append"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media"
"/api-reference/post-media-upload-append"

#: of tweepy.api.API.chunked_upload_finalize:1
msgid ""
"Use this endpoint after the entire media file is uploaded via appending. "
"If (and only if) the response contains a ``processing_info field``, it "
"may also be necessary to check its status and wait for it to return "
"success before proceeding to Tweet creation."
msgstr ""
"이 엔드포인트를 사용해, 청크 전송법으로 미디어를 전송하는 것을 끝마쳤음을 알립니다. "
"단, 응답에 ``processing_info`` 필드가 포함되어 있는 경우, 트윗을 작성하기 전 "
"해당 작업의 상태를 확인하고, 성공했다는 결과를 반환하기 전까지 기다려야 할 수도 있습니다. "

#: of tweepy.api.API.chunked_upload_finalize:13
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media"
"/api-reference/post-media-upload-finalize"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media"
"/api-reference/post-media-upload-finalize"

#: of tweepy.api.API.chunked_upload_init:1
msgid "Use this endpoint to initiate a chunked file upload session."
msgstr "이 엔드포인트를 사용해, 청크 전송법을 이용하는 컨텐츠의 첫 청크를 업로드합니다. "

#: of tweepy.api.API.chunked_upload_init:3
msgid "The size of the media being uploaded in bytes."
msgstr "바이트로 업로드되는 미디어의 크기. "

#: of tweepy.api.API.chunked_upload_init:13
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media"
"/api-reference/post-media-upload-init"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/media/upload-media"
"/api-reference/post-media-upload-init"

#: ../../api.rst:582
msgid "Trends"
msgstr "트렌드"

#: ../../api.rst:585
msgid "Get locations with trending topics"
msgstr "특정 위치 기준 트렌드 가져오기"

#: of tweepy.api.API.available_trends:1
msgid ""
"Returns the locations that Twitter has trending topic information for. "
"The response is an array of \"locations\" that encode the location's "
"WOEID (a Yahoo! Where On Earth ID) and some other human-readable "
"information such as a canonical name and country the location belongs in."
msgstr ""
"트위터에서 맞춤 트렌드를 제공하는 위치를 반환합니다. "
"반환되는 목록에 있는 위치들은, 야후의 Where On Earth ID값을 인코딩한 것이며, "
"사람이 읽을 수 있는, 공식 명칭 및 해당 위치가 속한 국가명 형태의 정보입니다. "

#: of tweepy.api.API.available_trends:12
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/trends/locations-"
"with-trending-topics/api-reference/get-trends-available"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/trends/locations-"
"with-trending-topics/api-reference/get-trends-available"

#: of tweepy.api.API.closest_trends:1
msgid ""
"Returns the locations that Twitter has trending topic information for, "
"closest to a specified location."
msgstr "지정한 위치에서 가장 가까운 '맞춤형 트렌드를 제공하는 위치'를 반환합니다. "

#: of tweepy.api.API.closest_trends:4
msgid ""
"The response is an array of “locations” that encode the location’s WOEID "
"and some other human-readable information such as a canonical name and "
"country the location belongs in."
msgstr ""
"반환값은 특정 위치들의 목록이며, WOEID를 인코딩한 것이고, "
"사람이 읽을 수 있는, 공식 명칭 및 해당 위치가 속한 국가명 형태의 정보입니다. "

#: of tweepy.api.API.closest_trends:8
msgid "A WOEID is a Yahoo! Where On Earth ID."
msgstr "WOEID는 야후의 Where On Earth ID를 뜻합니다. "

#: of tweepy.api.API.closest_trends:10
msgid ""
"If provided with a long parameter the available trend locations will be "
"sorted by distance, nearest to furthest, to the co-ordinate pair. The "
"valid ranges for longitude is -180.0 to +180.0 (West is negative, East is"
" positive) inclusive."
msgstr ""
"위도를 나타내는 매개변수이며, ``long`` 매개변수와 같이 사용해야만 합니다. "
"해당 위치 기준, 이용 가능한 트렌드 위치가 "
"거리별로 가장 가까운 위치부터 가장 먼 위치까지 좌표 순서쌍으로 정렬됩니다. "
"입력값의 유효 범위는 -180.0 ~ +180.0 (서쪽은 음수값, 동쪽이 양수값)입니다."

#: of tweepy.api.API.closest_trends:14
msgid ""
"If provided with a lat parameter the available trend locations will be "
"sorted by distance, nearest to furthest, to the co-ordinate pair. The "
"valid ranges for longitude is -180.0 to +180.0 (West is negative, East is"
" positive) inclusive."
msgstr ""
"경도를 나타내는 매개변수이며, ``lat`` 매개변수와 같이 사용해야만 합니다. "
"해당 위치 기준, 이용 가능한 트렌드 위치가 "
"거리별로 가장 가까운 위치부터 가장 먼 위치까지 좌표 순서쌍으로 정렬됩니다. "
"입력값의 유효 범위는 -180.0 ~ +180.0 (서쪽은 음수값, 동쪽이 양수값)입니다."

#: of tweepy.api.API.closest_trends:24
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/trends/locations-"
"with-trending-topics/api-reference/get-trends-closest"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/trends/locations-"
"with-trending-topics/api-reference/get-trends-closest"

#: ../../api.rst:592
msgid "Get trends near a location"
msgstr "특정 위치에 대한 트렌드 가져오기"

#: of tweepy.api.API.get_place_trends:1
msgid ""
"Returns the top 50 trending topics for a specific WOEID, if trending "
"information is available for it."
msgstr "해당 위치가 트렌드를 제공하는 위치일 경우, 상위 50개의 트렌드를 반환합니다. "

#: of tweepy.api.API.get_place_trends:4
msgid ""
"The response is an array of “trend” objects that encode the name of the "
"trending topic, the query parameter that can be used to search for the "
"topic on Twitter Search, and the Twitter Search URL."
msgstr ""
"반환값은 인코딩된 “trend” 객체의 배열 형태로 제공되며, "
"트위터 검색 및 트위터 검색의 URL에서 특정 주제를 검색하는 데 사용할 수 있는 "
"쿼리 매개변수도 사용할 수 있습니다. "

#: of tweepy.api.API.get_place_trends:8
msgid ""
"This information is cached for 5 minutes. Requesting more frequently than"
" that will not return any more data, and will count against your rate "
"limit usage."
msgstr ""
"이 정보는 5분동안 캐시되며, 이보다 더 빠르게 요청하면 데이터가 더 이상 반환되지 않으나, "
"트위터 API 호출 제한에는 계산됩니다. "

#: of tweepy.api.API.get_place_trends:12
msgid ""
"The tweet_volume for the last 24 hours is also returned for many trends "
"if this is available."
msgstr "사용 가능한 경우, 대부분의 트렌드에 지난 24시간 동안의 tweet_volume도 반환됩니다."

#: of tweepy.api.API.get_place_trends:15
msgid ""
"The Yahoo! Where On Earth ID of the location to return trending "
"information for. Global information is available by using 1 as the WOEID."
msgstr ""
"트렌드를 반환받을 기준 위치의 야후 Where On Earth ID값. "
"글로벌 트렌드는 이 값에 ``1`` 을 지정하여 확인할 수 있습니다. "

#: of tweepy.api.API.get_place_trends:18
msgid ""
"Setting this equal to hashtags will remove all hashtags from the trends "
"list."
msgstr "이 매개변수값을 ``hashtags`` 로 설정하면, 결과값에서 모든 해시태그를 제외합니다. "

#: of tweepy.api.API.get_place_trends:26
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/trends/trends-for-"
"location/api-reference/get-trends-place"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/trends/trends-for-"
"location/api-reference/get-trends-place"

#: ../../api.rst:597
msgid "Geo"
msgstr "위치 및 지리 정보"

#: ../../api.rst:600
msgid "Get information about a place"
msgstr "특정 장소에 대한 정보 가져오기"

#: of tweepy.api.API.geo_id:1
msgid "Given ``place_id``, provide more details about that place."
msgstr "``place_id`` 로 지정한 장소에 대한 자세한 정보를 제공합니다. "

#: of tweepy.api.API.geo_id:3
msgid "Valid Twitter ID of a location."
msgstr "특정 장소에 대한 유효한 트위터 고유 ID값."

#: of tweepy.api.API.geo_id:6
msgid ":class:`~tweepy.models.Place`"
msgstr ":class:`~tweepy.models.Place`"

#: of tweepy.api.API.geo_id:10
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/geo/place-"
"information/api-reference/get-geo-id-place_id"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/geo/place-"
"information/api-reference/get-geo-id-place_id"

#: ../../api.rst:605
msgid "Get places near a location"
msgstr "현재 위치로부터 가까운 장소 가져오기"

#: of tweepy.api.API.reverse_geocode:1
msgid ""
"Given a latitude and a longitude, searches for up to 20 places that can "
"be used as a ``place_id`` when updating a status."
msgstr ""
"주어진 위도 및 경도를 바탕으로, ``place_id`` 형태로 트윗을 작성할 때 사용할 수 있는 "
"특정 장소를 최대 20개까지 반환합니다. "

#: of tweepy.api.API.reverse_geocode:4
msgid ""
"This request is an informative call and will deliver generalized results "
"about geography."
msgstr "이 요청은 정보성 호출로 볼 수 있고, 지리 정보에 대한 일반적인 결과값을 제공합니다. "

#: of tweepy.api.API.reverse_geocode:7
msgid "The location's latitude."
msgstr "특정 장소의 위도값."

#: of tweepy.api.API.reverse_geocode:8
msgid "The location's longitude."
msgstr "특정 장소의 경도값."

#: of tweepy.api.API.reverse_geocode:9
msgid ""
"Specify the \"region\" in which to search, such as a number (then this is"
" a radius in meters, but it can also take a string that is suffixed with "
"ft to specify feet). If this is not passed in, then it is assumed to be "
"0m"
msgstr ""
"얼마나 넓은 지역을 검색할지를 지정하는 매개변수."
"기본적으로 미터(m) 단위 반지름으로 인식되나, 접미어 ``ft`` 를 통해 "
"피트(ft) 단위의 반지름으로 인식되게 할 수 있습니다. "
"기본값은 0(0m)입니다."

#: of tweepy.api.API.reverse_geocode:13
msgid "Assumed to be ``neighborhood`` by default; can also be ``city``."
msgstr "기본값은 ``neighborhood`` 지만, ``city`` 로도 설정할 수 있습니다. "

#: of tweepy.api.API.reverse_geocode:14
msgid ""
"A hint as to the maximum number of results to return. This is only a "
"guideline, which may not be adhered to."
msgstr "반환할 최대 결과 수에 대한 힌트값. 꼭 지켜지지 않을 수도 있습니다."

#: of tweepy.api.API.reverse_geocode:18 tweepy.api.API.search_geo:48
msgid ":py:class:`List`\\[:class:`~tweepy.models.Place`]"
msgstr ":py:class:`List`\\[:class:`~tweepy.models.Place`]"

#: of tweepy.api.API.reverse_geocode:22
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/geo/places-near-"
"location/api-reference/get-geo-reverse_geocode"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/geo/places-near-"
"location/api-reference/get-geo-reverse_geocode"

#: of tweepy.api.API.search_geo:1
msgid ""
"Search for places that can be attached to a Tweet via "
":func:`API.update_status`. Given a latitude and a longitude pair, an IP "
"address, or a name, this request will return a list of all the valid "
"places that can be used as the ``place_id`` when updating a status."
msgstr ""
":func:`API.update_status` 를 통해 트윗에 연결할 수 있는 장소를 검색합니다. "
"위도 및 경도쌍, IP 주소 또는 특정 이름을 지정하면, 이 요청은 "
"트윗을 작성(update a status)할 때 사용할 수 있는 모든 유효한 장소의 목록을 반환합니다. "

#: of tweepy.api.API.search_geo:6
msgid ""
"Conceptually, a query can be made from the user's location, retrieve a "
"list of places, have the user validate the location they are at, and then"
" send the ID of this location with a call to :func:`API.update_status`."
msgstr ""
"기본적으로 검색 조건은 사용자의 위치를 기준으로 하며, 특정 장소의 목록을 가져오고, "
"사용자가 현재 있는 위치라고 확인해 주면(User validate the location they are at) "
":func:`API.update_status` 를 호출할 때 이 위치의 ID를 전달할 수 있습니다. "

#: of tweepy.api.API.search_geo:11
msgid ""
"This is the recommended method to use find places that can be attached to"
" :func:`API.update_status`. Unlike :func:`API.reverse_geocode` which "
"provides raw data access, this endpoint can potentially re-order places "
"with regards to the user who is authenticated. This approach is also "
"preferred for interactive place matching with the user."
msgstr ""
"이는 :func:`API.update_status` 에 전달할 수 있는 장소를 찾을 때 권장하는 방법입니다. "
"원시적인 정보를 제공하는 :func:`API.reverse_geocode` 와 달리, 이 엔드포인트는 "
"현재 인증된 사용자와 관련되도록 장소를 잠재적으로 재정렬할 수 있습니다."

#: of tweepy.api.API.search_geo:17
msgid ""
"Some parameters in this method are only required based on the existence "
"of other parameters. For instance, ``lat`` is required if ``long`` is "
"provided, and vice-versa."
msgstr ""
"이 메서드의 특정 매개변수는 다른 매개변수가 존재할 때만 필요해집니다. "
"예를 들어, ``lat`` (위도값)은 ``long`` (경도값)이 제공된 경우 반드시 필요한 값이 되고, "
"반대로 ``long`` (경도값)은 ``lat`` (위도값)이 제공된 경우 반드시 필요한 값이 됩니다."

#: of tweepy.api.API.search_geo:21
msgid ""
"The latitude to search around. This parameter will be ignored unless it "
"is inside the range -90.0 to +90.0 (North is positive) inclusive. It will"
" also be ignored if there isn't a corresponding ``long`` parameter."
msgstr ""
"이 트윗이 가리킬 위치의 위도. -90.0 ~ +90.0 (북반구가 양수값) 범위 밖의 "
"값은 무시되며, 아래의 ``long`` 매개변수가 지정되지 않은 경우에도 무시됩니다."

#: of tweepy.api.API.search_geo:25
msgid ""
"The longitude to search around. The valid ranges for longitude are -180.0"
" to +180.0 (East is positive) inclusive. This parameter will be ignored "
"if outside that range, if it is not a number, if ``geo_enabled`` is "
"turned off, or if there not a corresponding ``lat`` parameter."
msgstr ""
"이 트윗이 가리킬 위치의 경도. -180.0 ~ +180.0 (동쪽이 양수값) 범위 밖의 "
"값, 숫자 이외의 값이 입력될 경우 무시되며, ``geo_enabled`` 가 비활성화 되었거나, "
"위의 ``lat`` 매개변수가 지정되지 않은 경우에도 전달된 값이 무시됩니다."

#: of tweepy.api.API.search_geo:30
msgid ""
"Free-form text to match against while executing a geo-based query, best "
"suited for finding nearby locations by name."
msgstr ""
"자유 형식의 텍스트형 쿼리이며, 이름으로 가장 가까운 위치를 찾는데 적합합니다. "

#: of tweepy.api.API.search_geo:32
msgid ""
"An IP address. Used when attempting to fix geolocation based off of the "
"user's IP address."
msgstr "IP 주소. 검색 위치의 기준을 설정할 때 사용됩니다."

#: of tweepy.api.API.search_geo:34
msgid ""
"This is the minimal granularity of place types to return and must be one "
"of: ``neighborhood``, ``city``, ``admin`` or ``country``. If no "
"granularity is provided for the request ``neighborhood`` is assumed.  "
"Setting this to ``city``, for example, will find places which have a type"
" of ``city``, ``admin`` or ``country``."
msgstr ""
"반환할 장소 유형의 최소 세분화이며, 다음 중 하나여야 합니다: "
"``neighborhood``, ``city``, ``admin`` 및 ``country``. "
"따로 지정하지 않는 경우, ``neighborhood`` 로 지정한 것으로 간주합니다."
"예로, 이를 ``city`` 로 설정하면 ``city``, ``admin`` 및 ``country`` "
"유형의 장소가 검색됩니다. "

#: of tweepy.api.API.search_geo:34
msgid ""
"This is the minimal granularity of place types to return and must be one "
"of: ``neighborhood``, ``city``, ``admin`` or ``country``. If no "
"granularity is provided for the request ``neighborhood`` is assumed."
msgstr ""
"반환할 장소 유형의 최소 세분화이며, 다음 중 하나여야 합니다: "
"``neighborhood``, ``city``, ``admin`` 및 ``country``. "
"따로 지정하지 않는 경우, ``neighborhood`` 로 지정한 것으로 간주합니다."

#: of tweepy.api.API.search_geo:39
msgid ""
"Setting this to ``city``, for example, will find places which have a type"
" of ``city``, ``admin`` or ``country``."
msgstr ""
"예로, 이를 ``city`` 로 설정하면 ``city``, ``admin`` 및 ``country`` "
"유형의 장소가 검색됩니다. "

#: of tweepy.api.API.search_geo:41
msgid ""
"A hint as to the number of results to return. This does not guarantee "
"that the number of results returned will equal ``max_results``, but "
"instead informs how many \"nearby\" results to return. Ideally, only pass"
" in the number of places you intend to display to the user here."
msgstr ""
"반환받을 결과 수에 대한 힌트값입니다. 원본 결과 수는 이 힌트값과 같지 않을 수 있으며, "
"'가까운 장소'꼴의 결과를 몇 개나 반환할지를 정하는 매개변수값입니다. "
"즉, 사용자에게 표시할 결과 수만큼의 값을 지정하는 것이 이상적입니다. "

#: of tweepy.api.API.search_geo:52
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/geo/places-near-"
"location/api-reference/get-geo-search"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/geo/places-near-"
"location/api-reference/get-geo-search"

#: ../../api.rst:612
msgid "Developer utilities"
msgstr "개발자 도구"

#: ../../api.rst:615
msgid "Get Twitter supported languages"
msgstr "트위터 지원 언어 가져오기"

#: of tweepy.api.API.supported_languages:1
msgid ""
"Returns the list of languages supported by Twitter along with the "
"language code supported by Twitter."
msgstr "트위터에서 지원하는 언어 코드와 함께, 지원 언어의 목록을 반환합니다."

#: of tweepy.api.API.supported_languages:4
msgid ""
"The language code may be formatted as ISO 639-1 alpha-2 (``en``), ISO "
"639-3 alpha-3 (``msa``), or ISO 639-1 alpha-2 combined with an ISO 3166-1"
" alpha-2 localization (``zh-tw``)."
msgstr ""
"언어 코드 포맷은 국제 표준 중 ISO 639-1 alpha-2 (``ko``), "
"ISO 639-3 alpha-3(``kor``) 및 "
"ISO 639-1 alpha-2와 ISO 3166-1 alpha-2(``ko-kr``) 를 따릅니다. "

#: of tweepy.api.API.supported_languages:13
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/developer-utilities"
"/supported-languages/api-reference/get-help-languages"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/developer-utilities"
"/supported-languages/api-reference/get-help-languages"

#: ../../api.rst:620
msgid "Get app rate limit status"
msgstr "트위터 API 호출 제한 확인하기"

#: of tweepy.api.API.rate_limit_status:1
msgid ""
"Returns the current rate limits for methods belonging to the specified "
"resource families. When using application-only auth, this method's "
"response indicates the application-only auth rate limiting context."
msgstr ""
"지정한 리소스 패밀리의 호출 제한 관련 정보를 반환합니다. "
"application-only 인증 방식 사용 시, 이 메서드는 해당 인증 관련 "
"API 호출 제한 정보를 반환합니다."

#: of tweepy.api.API.rate_limit_status:5
msgid ""
"A comma-separated list of resource families you want to know the current "
"rate limit disposition for."
msgstr ""
"현재의 API 호출 제한을 확인할, 쉼표(,)로 구분된 리소스 패밀리의 목록입니다."

#: of tweepy.api.API.rate_limit_status:13
msgid ""
"https://developer.twitter.com/en/docs/twitter-api/v1/developer-utilities"
"/rate-limit-status/api-reference/get-application-rate_limit_status"
msgstr ""
"https://developer.twitter.com/en/docs/twitter-api/v1/developer-utilities"
"/rate-limit-status/api-reference/get-application-rate_limit_status"

#: ../../api.rst:626
msgid "Footnotes"
msgstr "각주"

#: ../../api.rst:627
msgid "https://web.archive.org/web/20170829051949/https://dev.twitter.com/rest/reference/get/search/tweets"
msgstr "https://web.archive.org/web/20170829051949/https://dev.twitter.com/rest/reference/get/search/tweets"

#: ../../api.rst:628
msgid ""
"https://twittercommunity.com/t/favorited-reports-as-false-even-if-status-"
"is-already-favorited-by-the-user/11145"
msgstr ""
"https://twittercommunity.com/t/favorited-reports-as-false-even-if-status-"
"is-already-favorited-by-the-user/11145"